function cov_2qr4gjlgn4(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\isTypedArray.js";var hash="b0426d55a0b5b97270910092d2ed598cbc6716bf";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\isTypedArray.js",statementMap:{"0":{start:{line:6,column:19},end:{line:6,column:94}},"1":{start:{line:9,column:25},end:{line:9,column:60}},"2":{start:{line:26,column:21},end:{line:28,column:68}},"3":{start:{line:27,column:15},end:{line:27,column:38}},"4":{start:{line:28,column:15},end:{line:28,column:68}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:15},end:{line:27,column:38}},line:27},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:15},end:{line:28,column:68}},line:28}},branchMap:{"0":{loc:{start:{line:9,column:25},end:{line:9,column:60}},type:"binary-expr",locations:[{start:{line:9,column:25},end:{line:9,column:34}},{start:{line:9,column:38},end:{line:9,column:60}}],line:9},"1":{loc:{start:{line:26,column:21},end:{line:28,column:68}},type:"cond-expr",locations:[{start:{line:27,column:4},end:{line:27,column:38}},{start:{line:28,column:4},end:{line:28,column:68}}],line:26},"2":{loc:{start:{line:28,column:15},end:{line:28,column:68}},type:"binary-expr",locations:[{start:{line:28,column:15},end:{line:28,column:34}},{start:{line:28,column:38},end:{line:28,column:68}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b0426d55a0b5b97270910092d2ed598cbc6716bf"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2qr4gjlgn4=function(){return actualCoverage;};}return actualCoverage;}cov_2qr4gjlgn4();import getTag from'./.internal/getTag.js';import nodeTypes from'./.internal/nodeTypes.js';import isObjectLike from'./isObjectLike.js';/** Used to match `toStringTag` values of typed arrays. */const reTypedTag=(cov_2qr4gjlgn4().s[0]++,/^\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\]$/);/* Node.js helper references. */const nodeIsTypedArray=(cov_2qr4gjlgn4().s[1]++,(cov_2qr4gjlgn4().b[0][0]++,nodeTypes)&&(cov_2qr4gjlgn4().b[0][1]++,nodeTypes.isTypedArray));/**
 * Checks if `value` is classified as a typed array.
 *
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * isTypedArray(new Uint8Array)
 * // => true
 *
 * isTypedArray([])
 * // => false
 */const isTypedArray=(cov_2qr4gjlgn4().s[2]++,nodeIsTypedArray?(cov_2qr4gjlgn4().b[1][0]++,value=>{cov_2qr4gjlgn4().f[0]++;cov_2qr4gjlgn4().s[3]++;return nodeIsTypedArray(value);}):(cov_2qr4gjlgn4().b[1][1]++,value=>{cov_2qr4gjlgn4().f[1]++;cov_2qr4gjlgn4().s[4]++;return(cov_2qr4gjlgn4().b[2][0]++,isObjectLike(value))&&(cov_2qr4gjlgn4().b[2][1]++,reTypedTag.test(getTag(value)));}));export default isTypedArray;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnFyNGdqbGduNCIsImFjdHVhbENvdmVyYWdlIiwiZ2V0VGFnIiwibm9kZVR5cGVzIiwiaXNPYmplY3RMaWtlIiwicmVUeXBlZFRhZyIsInMiLCJub2RlSXNUeXBlZEFycmF5IiwiYiIsImlzVHlwZWRBcnJheSIsInZhbHVlIiwiZiIsInRlc3QiXSwic291cmNlcyI6WyJpc1R5cGVkQXJyYXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdldFRhZyBmcm9tICcuLy5pbnRlcm5hbC9nZXRUYWcuanMnXG5pbXBvcnQgbm9kZVR5cGVzIGZyb20gJy4vLmludGVybmFsL25vZGVUeXBlcy5qcydcbmltcG9ydCBpc09iamVjdExpa2UgZnJvbSAnLi9pc09iamVjdExpa2UuanMnXG5cbi8qKiBVc2VkIHRvIG1hdGNoIGB0b1N0cmluZ1RhZ2AgdmFsdWVzIG9mIHR5cGVkIGFycmF5cy4gKi9cbmNvbnN0IHJlVHlwZWRUYWcgPSAvXlxcW29iamVjdCAoPzpGbG9hdCg/OjMyfDY0KXwoPzpJbnR8VWludCkoPzo4fDE2fDMyKXxVaW50OENsYW1wZWQpQXJyYXlcXF0kL1xuXG4vKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL1xuY29uc3Qgbm9kZUlzVHlwZWRBcnJheSA9IG5vZGVUeXBlcyAmJiBub2RlVHlwZXMuaXNUeXBlZEFycmF5XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIHR5cGVkIGFycmF5LlxuICpcbiAqIEBzaW5jZSAzLjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBpc1R5cGVkQXJyYXkobmV3IFVpbnQ4QXJyYXkpXG4gKiAvLyA9PiB0cnVlXG4gKlxuICogaXNUeXBlZEFycmF5KFtdKVxuICogLy8gPT4gZmFsc2VcbiAqL1xuY29uc3QgaXNUeXBlZEFycmF5ID0gbm9kZUlzVHlwZWRBcnJheVxuICA/ICh2YWx1ZSkgPT4gbm9kZUlzVHlwZWRBcnJheSh2YWx1ZSlcbiAgOiAodmFsdWUpID0+IGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgcmVUeXBlZFRhZy50ZXN0KGdldFRhZyh2YWx1ZSkpXG5cbmV4cG9ydCBkZWZhdWx0IGlzVHlwZWRBcnJheVxuIl0sIm1hcHBpbmdzIjoiMDNEQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLE1BQU8sQ0FBQUUsTUFBTSxLQUFNLHVCQUF1QixDQUMxQyxNQUFPLENBQUFDLFNBQVMsS0FBTSwwQkFBMEIsQ0FDaEQsTUFBTyxDQUFBQyxZQUFZLEtBQU0sbUJBQW1CLENBRTVDLDBEQUNBLEtBQU0sQ0FBQUMsVUFBVSxFQUFBTCxjQUFBLEdBQUFNLENBQUEsTUFBRywyRUFBMkUsRUFFOUYsZ0NBQ0EsS0FBTSxDQUFBQyxnQkFBZ0IsRUFBQVAsY0FBQSxHQUFBTSxDQUFBLE1BQUcsQ0FBQU4sY0FBQSxHQUFBUSxDQUFBLFNBQUFMLFNBQVMsSUFBQUgsY0FBQSxHQUFBUSxDQUFBLFNBQUlMLFNBQVMsQ0FBQ00sWUFBWSxHQUU1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxLQUFNLENBQUFBLFlBQVksRUFBQVQsY0FBQSxHQUFBTSxDQUFBLE1BQUdDLGdCQUFnQixFQUFBUCxjQUFBLEdBQUFRLENBQUEsU0FDaENFLEtBQUssRUFBSyxDQUFBVixjQUFBLEdBQUFXLENBQUEsTUFBQVgsY0FBQSxHQUFBTSxDQUFBLGFBQUFDLGdCQUFnQixDQUFDRyxLQUFLLENBQUMsQ0FBRCxDQUFDLEdBQUFWLGNBQUEsR0FBQVEsQ0FBQSxTQUNqQ0UsS0FBSyxFQUFLLENBQUFWLGNBQUEsR0FBQVcsQ0FBQSxNQUFBWCxjQUFBLEdBQUFNLENBQUEsYUFBQU4sY0FBQSxHQUFBUSxDQUFBLFNBQUFKLFlBQVksQ0FBQ00sS0FBSyxDQUFDLElBQUFWLGNBQUEsR0FBQVEsQ0FBQSxTQUFJSCxVQUFVLENBQUNPLElBQUksQ0FBQ1YsTUFBTSxDQUFDUSxLQUFLLENBQUMsQ0FBQyxFQUFELENBQUMsR0FFcEUsY0FBZSxDQUFBRCxZQUFZIiwiaWdub3JlTGlzdCI6W119