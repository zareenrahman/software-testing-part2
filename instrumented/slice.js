function cov_1skmk2ya96(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\slice.js";var hash="4822192ba1af9e9f481e8100c4ffa4b32850d4e2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\slice.js",statementMap:{"0":{start:{line:22,column:15},end:{line:22,column:47}},"1":{start:{line:23,column:2},end:{line:25,column:3}},"2":{start:{line:24,column:4},end:{line:24,column:13}},"3":{start:{line:26,column:2},end:{line:26,column:35}},"4":{start:{line:27,column:2},end:{line:27,column:40}},"5":{start:{line:29,column:2},end:{line:31,column:3}},"6":{start:{line:30,column:4},end:{line:30,column:50}},"7":{start:{line:32,column:2},end:{line:34,column:3}},"8":{start:{line:33,column:4},end:{line:33,column:17}},"9":{start:{line:35,column:2},end:{line:35,column:50}},"10":{start:{line:36,column:2},end:{line:36,column:14}},"11":{start:{line:38,column:14},end:{line:38,column:16}},"12":{start:{line:39,column:17},end:{line:39,column:34}},"13":{start:{line:40,column:2},end:{line:42,column:3}},"14":{start:{line:41,column:4},end:{line:41,column:40}},"15":{start:{line:43,column:2},end:{line:43,column:15}}},fnMap:{"0":{name:"slice",decl:{start:{line:21,column:9},end:{line:21,column:14}},loc:{start:{line:21,column:34},end:{line:44,column:1}},line:21}},branchMap:{"0":{loc:{start:{line:22,column:15},end:{line:22,column:47}},type:"cond-expr",locations:[{start:{line:22,column:31},end:{line:22,column:32}},{start:{line:22,column:35},end:{line:22,column:47}}],line:22},"1":{loc:{start:{line:23,column:2},end:{line:25,column:3}},type:"if",locations:[{start:{line:23,column:2},end:{line:25,column:3}},{start:{line:23,column:2},end:{line:25,column:3}}],line:23},"2":{loc:{start:{line:26,column:10},end:{line:26,column:35}},type:"cond-expr",locations:[{start:{line:26,column:26},end:{line:26,column:27}},{start:{line:26,column:30},end:{line:26,column:35}}],line:26},"3":{loc:{start:{line:27,column:8},end:{line:27,column:40}},type:"cond-expr",locations:[{start:{line:27,column:28},end:{line:27,column:34}},{start:{line:27,column:37},end:{line:27,column:40}}],line:27},"4":{loc:{start:{line:29,column:2},end:{line:31,column:3}},type:"if",locations:[{start:{line:29,column:2},end:{line:31,column:3}},{start:{line:29,column:2},end:{line:31,column:3}}],line:29},"5":{loc:{start:{line:30,column:12},end:{line:30,column:50}},type:"cond-expr",locations:[{start:{line:30,column:30},end:{line:30,column:31}},{start:{line:30,column:35},end:{line:30,column:49}}],line:30},"6":{loc:{start:{line:32,column:2},end:{line:34,column:3}},type:"if",locations:[{start:{line:32,column:2},end:{line:34,column:3}},{start:{line:32,column:2},end:{line:34,column:3}}],line:32},"7":{loc:{start:{line:35,column:11},end:{line:35,column:50}},type:"cond-expr",locations:[{start:{line:35,column:25},end:{line:35,column:26}},{start:{line:35,column:30},end:{line:35,column:49}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4822192ba1af9e9f481e8100c4ffa4b32850d4e2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1skmk2ya96=function(){return actualCoverage;};}return actualCoverage;}cov_1skmk2ya96();/**
 * Creates a slice of `array` from `start` up to, but not including, `end`.
 *
 * **Note:** This method is used instead of
 * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
 * returned.
 *
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position. A negative index will be treated as an offset from the end.
 * @param {number} [end=array.length] The end position. A negative index will be treated as an offset from the end.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var array = [1, 2, 3, 4]
 *
 * _.slice(array, 2)
 * // => [3, 4]
 */function slice(array,start,end){cov_1skmk2ya96().f[0]++;let length=(cov_1skmk2ya96().s[0]++,array==null?(cov_1skmk2ya96().b[0][0]++,0):(cov_1skmk2ya96().b[0][1]++,array.length));cov_1skmk2ya96().s[1]++;if(!length){cov_1skmk2ya96().b[1][0]++;cov_1skmk2ya96().s[2]++;return[];}else{cov_1skmk2ya96().b[1][1]++;}cov_1skmk2ya96().s[3]++;start=start==null?(cov_1skmk2ya96().b[2][0]++,0):(cov_1skmk2ya96().b[2][1]++,start);cov_1skmk2ya96().s[4]++;end=end===undefined?(cov_1skmk2ya96().b[3][0]++,length):(cov_1skmk2ya96().b[3][1]++,end);cov_1skmk2ya96().s[5]++;if(start<0){cov_1skmk2ya96().b[4][0]++;cov_1skmk2ya96().s[6]++;start=-start>length?(cov_1skmk2ya96().b[5][0]++,0):(cov_1skmk2ya96().b[5][1]++,length+start);}else{cov_1skmk2ya96().b[4][1]++;}cov_1skmk2ya96().s[7]++;if(end<0){cov_1skmk2ya96().b[6][0]++;cov_1skmk2ya96().s[8]++;end+=length;}else{cov_1skmk2ya96().b[6][1]++;}cov_1skmk2ya96().s[9]++;length=start>end?(cov_1skmk2ya96().b[7][0]++,0):(cov_1skmk2ya96().b[7][1]++,end-start>>>0);cov_1skmk2ya96().s[10]++;start>>>=0;let index=(cov_1skmk2ya96().s[11]++,-1);const result=(cov_1skmk2ya96().s[12]++,new Array(length));cov_1skmk2ya96().s[13]++;while(++index<length){cov_1skmk2ya96().s[14]++;result[index]=array[index+start];}cov_1skmk2ya96().s[15]++;return result;}export default slice;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXNrbWsyeWE5NiIsImFjdHVhbENvdmVyYWdlIiwic2xpY2UiLCJhcnJheSIsInN0YXJ0IiwiZW5kIiwiZiIsImxlbmd0aCIsInMiLCJiIiwidW5kZWZpbmVkIiwiaW5kZXgiLCJyZXN1bHQiLCJBcnJheSJdLCJzb3VyY2VzIjpbInNsaWNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIHNsaWNlIG9mIGBhcnJheWAgZnJvbSBgc3RhcnRgIHVwIHRvLCBidXQgbm90IGluY2x1ZGluZywgYGVuZGAuXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIHVzZWQgaW5zdGVhZCBvZlxuICogW2BBcnJheSNzbGljZWBdKGh0dHBzOi8vbWRuLmlvL0FycmF5L3NsaWNlKSB0byBlbnN1cmUgZGVuc2UgYXJyYXlzIGFyZVxuICogcmV0dXJuZWQuXG4gKlxuICogQHNpbmNlIDMuMC4wXG4gKiBAY2F0ZWdvcnkgQXJyYXlcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBzbGljZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9MF0gVGhlIHN0YXJ0IHBvc2l0aW9uLiBBIG5lZ2F0aXZlIGluZGV4IHdpbGwgYmUgdHJlYXRlZCBhcyBhbiBvZmZzZXQgZnJvbSB0aGUgZW5kLlxuICogQHBhcmFtIHtudW1iZXJ9IFtlbmQ9YXJyYXkubGVuZ3RoXSBUaGUgZW5kIHBvc2l0aW9uLiBBIG5lZ2F0aXZlIGluZGV4IHdpbGwgYmUgdHJlYXRlZCBhcyBhbiBvZmZzZXQgZnJvbSB0aGUgZW5kLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBzbGljZSBvZiBgYXJyYXlgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgYXJyYXkgPSBbMSwgMiwgMywgNF1cbiAqXG4gKiBfLnNsaWNlKGFycmF5LCAyKVxuICogLy8gPT4gWzMsIDRdXG4gKi9cbmZ1bmN0aW9uIHNsaWNlKGFycmF5LCBzdGFydCwgZW5kKSB7XG4gIGxldCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aFxuICBpZiAoIWxlbmd0aCkge1xuICAgIHJldHVybiBbXVxuICB9XG4gIHN0YXJ0ID0gc3RhcnQgPT0gbnVsbCA/IDAgOiBzdGFydFxuICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IGVuZFxuXG4gIGlmIChzdGFydCA8IDApIHtcbiAgICBzdGFydCA9IC1zdGFydCA+IGxlbmd0aCA/IDAgOiAobGVuZ3RoICsgc3RhcnQpXG4gIH1cbiAgaWYgKGVuZCA8IDApIHtcbiAgICBlbmQgKz0gbGVuZ3RoXG4gIH1cbiAgbGVuZ3RoID0gc3RhcnQgPiBlbmQgPyAwIDogKChlbmQgLSBzdGFydCkgPj4+IDApXG4gIHN0YXJ0ID4+Pj0gMFxuXG4gIGxldCBpbmRleCA9IC0xXG4gIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheShsZW5ndGgpXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGFycmF5W2luZGV4ICsgc3RhcnRdXG4gIH1cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnQgZGVmYXVsdCBzbGljZVxuIl0sIm1hcHBpbmdzIjoiMjNHQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTLENBQUFFLEtBQUtBLENBQUNDLEtBQUssQ0FBRUMsS0FBSyxDQUFFQyxHQUFHLENBQUUsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLE1BQ2hDLEdBQUksQ0FBQUMsTUFBTSxFQUFBUCxjQUFBLEdBQUFRLENBQUEsTUFBR0wsS0FBSyxFQUFJLElBQUksRUFBQUgsY0FBQSxHQUFBUyxDQUFBLFNBQUcsQ0FBQyxHQUFBVCxjQUFBLEdBQUFTLENBQUEsU0FBR04sS0FBSyxDQUFDSSxNQUFNLEdBQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUM3QyxHQUFJLENBQUNELE1BQU0sQ0FBRSxDQUFBUCxjQUFBLEdBQUFTLENBQUEsU0FBQVQsY0FBQSxHQUFBUSxDQUFBLE1BQ1gsTUFBTyxFQUFFLENBQ1gsQ0FBQyxLQUFBUixjQUFBLEdBQUFTLENBQUEsVUFBQVQsY0FBQSxHQUFBUSxDQUFBLE1BQ0RKLEtBQUssQ0FBR0EsS0FBSyxFQUFJLElBQUksRUFBQUosY0FBQSxHQUFBUyxDQUFBLFNBQUcsQ0FBQyxHQUFBVCxjQUFBLEdBQUFTLENBQUEsU0FBR0wsS0FBSyxFQUFBSixjQUFBLEdBQUFRLENBQUEsTUFDakNILEdBQUcsQ0FBR0EsR0FBRyxHQUFLSyxTQUFTLEVBQUFWLGNBQUEsR0FBQVMsQ0FBQSxTQUFHRixNQUFNLEdBQUFQLGNBQUEsR0FBQVMsQ0FBQSxTQUFHSixHQUFHLEVBQUFMLGNBQUEsR0FBQVEsQ0FBQSxNQUV0QyxHQUFJSixLQUFLLENBQUcsQ0FBQyxDQUFFLENBQUFKLGNBQUEsR0FBQVMsQ0FBQSxTQUFBVCxjQUFBLEdBQUFRLENBQUEsTUFDYkosS0FBSyxDQUFHLENBQUNBLEtBQUssQ0FBR0csTUFBTSxFQUFBUCxjQUFBLEdBQUFTLENBQUEsU0FBRyxDQUFDLEdBQUFULGNBQUEsR0FBQVMsQ0FBQSxTQUFJRixNQUFNLENBQUdILEtBQUssQ0FBQyxDQUNoRCxDQUFDLEtBQUFKLGNBQUEsR0FBQVMsQ0FBQSxVQUFBVCxjQUFBLEdBQUFRLENBQUEsTUFDRCxHQUFJSCxHQUFHLENBQUcsQ0FBQyxDQUFFLENBQUFMLGNBQUEsR0FBQVMsQ0FBQSxTQUFBVCxjQUFBLEdBQUFRLENBQUEsTUFDWEgsR0FBRyxFQUFJRSxNQUFNLENBQ2YsQ0FBQyxLQUFBUCxjQUFBLEdBQUFTLENBQUEsVUFBQVQsY0FBQSxHQUFBUSxDQUFBLE1BQ0RELE1BQU0sQ0FBR0gsS0FBSyxDQUFHQyxHQUFHLEVBQUFMLGNBQUEsR0FBQVMsQ0FBQSxTQUFHLENBQUMsR0FBQVQsY0FBQSxHQUFBUyxDQUFBLFNBQUtKLEdBQUcsQ0FBR0QsS0FBSyxHQUFNLENBQUMsQ0FBQyxDQUFBSixjQUFBLEdBQUFRLENBQUEsT0FDaERKLEtBQUssSUFBTSxDQUFDLENBRVosR0FBSSxDQUFBTyxLQUFLLEVBQUFYLGNBQUEsR0FBQVEsQ0FBQSxPQUFHLENBQUMsQ0FBQyxFQUNkLEtBQU0sQ0FBQUksTUFBTSxFQUFBWixjQUFBLEdBQUFRLENBQUEsT0FBRyxHQUFJLENBQUFLLEtBQUssQ0FBQ04sTUFBTSxDQUFDLEVBQUFQLGNBQUEsR0FBQVEsQ0FBQSxPQUNoQyxNQUFPLEVBQUVHLEtBQUssQ0FBR0osTUFBTSxDQUFFLENBQUFQLGNBQUEsR0FBQVEsQ0FBQSxPQUN2QkksTUFBTSxDQUFDRCxLQUFLLENBQUMsQ0FBR1IsS0FBSyxDQUFDUSxLQUFLLENBQUdQLEtBQUssQ0FBQyxDQUN0QyxDQUFDSixjQUFBLEdBQUFRLENBQUEsT0FDRCxNQUFPLENBQUFJLE1BQU0sQ0FDZixDQUVBLGNBQWUsQ0FBQVYsS0FBSyIsImlnbm9yZUxpc3QiOltdfQ==