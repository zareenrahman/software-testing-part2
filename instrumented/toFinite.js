function cov_2a77ve74p6(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\toFinite.js";var hash="fa8301551c8c1223251c3d9d743d11bd9a344f83";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\toFinite.js",statementMap:{"0":{start:{line:4,column:17},end:{line:4,column:22}},"1":{start:{line:5,column:20},end:{line:5,column:43}},"2":{start:{line:29,column:2},end:{line:31,column:3}},"3":{start:{line:30,column:4},end:{line:30,column:34}},"4":{start:{line:32,column:2},end:{line:32,column:25}},"5":{start:{line:33,column:2},end:{line:36,column:3}},"6":{start:{line:34,column:18},end:{line:34,column:36}},"7":{start:{line:35,column:4},end:{line:35,column:29}},"8":{start:{line:37,column:2},end:{line:37,column:36}}},fnMap:{"0":{name:"toFinite",decl:{start:{line:28,column:9},end:{line:28,column:17}},loc:{start:{line:28,column:25},end:{line:38,column:1}},line:28}},branchMap:{"0":{loc:{start:{line:29,column:2},end:{line:31,column:3}},type:"if",locations:[{start:{line:29,column:2},end:{line:31,column:3}},{start:{line:29,column:2},end:{line:31,column:3}}],line:29},"1":{loc:{start:{line:30,column:11},end:{line:30,column:34}},type:"cond-expr",locations:[{start:{line:30,column:25},end:{line:30,column:30}},{start:{line:30,column:33},end:{line:30,column:34}}],line:30},"2":{loc:{start:{line:33,column:2},end:{line:36,column:3}},type:"if",locations:[{start:{line:33,column:2},end:{line:36,column:3}},{start:{line:33,column:2},end:{line:36,column:3}}],line:33},"3":{loc:{start:{line:33,column:6},end:{line:33,column:47}},type:"binary-expr",locations:[{start:{line:33,column:6},end:{line:33,column:24}},{start:{line:33,column:28},end:{line:33,column:47}}],line:33},"4":{loc:{start:{line:34,column:18},end:{line:34,column:36}},type:"cond-expr",locations:[{start:{line:34,column:30},end:{line:34,column:32}},{start:{line:34,column:35},end:{line:34,column:36}}],line:34},"5":{loc:{start:{line:37,column:9},end:{line:37,column:36}},type:"cond-expr",locations:[{start:{line:37,column:27},end:{line:37,column:32}},{start:{line:37,column:35},end:{line:37,column:36}}],line:37}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fa8301551c8c1223251c3d9d743d11bd9a344f83"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2a77ve74p6=function(){return actualCoverage;};}return actualCoverage;}cov_2a77ve74p6();import toNumber from'./toNumber.js';/** Used as references for various `Number` constants. */const INFINITY=(cov_2a77ve74p6().s[0]++,1/0);const MAX_INTEGER=(cov_2a77ve74p6().s[1]++,1.7976931348623157e+308);/**
 * Converts `value` to a finite number.
 *
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * toFinite(3.2)
 * // => 3.2
 *
 * toFinite(Number.MIN_VALUE)
 * // => 5e-324
 *
 * toFinite(Infinity)
 * // => 1.7976931348623157e+308
 *
 * toFinite('3.2')
 * // => 3.2
 */function toFinite(value){cov_2a77ve74p6().f[0]++;cov_2a77ve74p6().s[2]++;if(!value){cov_2a77ve74p6().b[0][0]++;cov_2a77ve74p6().s[3]++;return value===0?(cov_2a77ve74p6().b[1][0]++,value):(cov_2a77ve74p6().b[1][1]++,0);}else{cov_2a77ve74p6().b[0][1]++;}cov_2a77ve74p6().s[4]++;value=toNumber(value);cov_2a77ve74p6().s[5]++;if((cov_2a77ve74p6().b[3][0]++,value===INFINITY)||(cov_2a77ve74p6().b[3][1]++,value===-INFINITY)){cov_2a77ve74p6().b[2][0]++;const sign=(cov_2a77ve74p6().s[6]++,value<0?(cov_2a77ve74p6().b[4][0]++,-1):(cov_2a77ve74p6().b[4][1]++,1));cov_2a77ve74p6().s[7]++;return sign*MAX_INTEGER;}else{cov_2a77ve74p6().b[2][1]++;}cov_2a77ve74p6().s[8]++;return value===value?(cov_2a77ve74p6().b[5][0]++,value):(cov_2a77ve74p6().b[5][1]++,0);}export default toFinite;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmE3N3ZlNzRwNiIsImFjdHVhbENvdmVyYWdlIiwidG9OdW1iZXIiLCJJTkZJTklUWSIsInMiLCJNQVhfSU5URUdFUiIsInRvRmluaXRlIiwidmFsdWUiLCJmIiwiYiIsInNpZ24iXSwic291cmNlcyI6WyJ0b0Zpbml0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdG9OdW1iZXIgZnJvbSAnLi90b051bWJlci5qcydcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG5jb25zdCBJTkZJTklUWSA9IDEgLyAwXG5jb25zdCBNQVhfSU5URUdFUiA9IDEuNzk3NjkzMTM0ODYyMzE1N2UrMzA4XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIGZpbml0ZSBudW1iZXIuXG4gKlxuICogQHNpbmNlIDQuMTIuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqXG4gKiB0b0Zpbml0ZSgzLjIpXG4gKiAvLyA9PiAzLjJcbiAqXG4gKiB0b0Zpbml0ZShOdW1iZXIuTUlOX1ZBTFVFKVxuICogLy8gPT4gNWUtMzI0XG4gKlxuICogdG9GaW5pdGUoSW5maW5pdHkpXG4gKiAvLyA9PiAxLjc5NzY5MzEzNDg2MjMxNTdlKzMwOFxuICpcbiAqIHRvRmluaXRlKCczLjInKVxuICogLy8gPT4gMy4yXG4gKi9cbmZ1bmN0aW9uIHRvRmluaXRlKHZhbHVlKSB7XG4gIGlmICghdmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IDAgPyB2YWx1ZSA6IDBcbiAgfVxuICB2YWx1ZSA9IHRvTnVtYmVyKHZhbHVlKVxuICBpZiAodmFsdWUgPT09IElORklOSVRZIHx8IHZhbHVlID09PSAtSU5GSU5JVFkpIHtcbiAgICBjb25zdCBzaWduID0gKHZhbHVlIDwgMCA/IC0xIDogMSlcbiAgICByZXR1cm4gc2lnbiAqIE1BWF9JTlRFR0VSXG4gIH1cbiAgcmV0dXJuIHZhbHVlID09PSB2YWx1ZSA/IHZhbHVlIDogMFxufVxuXG5leHBvcnQgZGVmYXVsdCB0b0Zpbml0ZVxuIl0sIm1hcHBpbmdzIjoiOGlGQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLE1BQU8sQ0FBQUUsUUFBUSxLQUFNLGVBQWUsQ0FFcEMseURBQ0EsS0FBTSxDQUFBQyxRQUFRLEVBQUFILGNBQUEsR0FBQUksQ0FBQSxNQUFHLENBQUMsQ0FBRyxDQUFDLEVBQ3RCLEtBQU0sQ0FBQUMsV0FBVyxFQUFBTCxjQUFBLEdBQUFJLENBQUEsTUFBRyx1QkFBdUIsRUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBUyxDQUFBRSxRQUFRQSxDQUFDQyxLQUFLLENBQUUsQ0FBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQUFSLGNBQUEsR0FBQUksQ0FBQSxNQUN2QixHQUFJLENBQUNHLEtBQUssQ0FBRSxDQUFBUCxjQUFBLEdBQUFTLENBQUEsU0FBQVQsY0FBQSxHQUFBSSxDQUFBLE1BQ1YsTUFBTyxDQUFBRyxLQUFLLEdBQUssQ0FBQyxFQUFBUCxjQUFBLEdBQUFTLENBQUEsU0FBR0YsS0FBSyxHQUFBUCxjQUFBLEdBQUFTLENBQUEsU0FBRyxDQUFDLEVBQ2hDLENBQUMsS0FBQVQsY0FBQSxHQUFBUyxDQUFBLFVBQUFULGNBQUEsR0FBQUksQ0FBQSxNQUNERyxLQUFLLENBQUdMLFFBQVEsQ0FBQ0ssS0FBSyxDQUFDLENBQUFQLGNBQUEsR0FBQUksQ0FBQSxNQUN2QixHQUFJLENBQUFKLGNBQUEsR0FBQVMsQ0FBQSxTQUFBRixLQUFLLEdBQUtKLFFBQVEsSUFBQUgsY0FBQSxHQUFBUyxDQUFBLFNBQUlGLEtBQUssR0FBSyxDQUFDSixRQUFRLEVBQUUsQ0FBQUgsY0FBQSxHQUFBUyxDQUFBLFNBQzdDLEtBQU0sQ0FBQUMsSUFBSSxFQUFBVixjQUFBLEdBQUFJLENBQUEsTUFBSUcsS0FBSyxDQUFHLENBQUMsRUFBQVAsY0FBQSxHQUFBUyxDQUFBLFNBQUcsQ0FBQyxDQUFDLEdBQUFULGNBQUEsR0FBQVMsQ0FBQSxTQUFHLENBQUMsRUFBQyxDQUFBVCxjQUFBLEdBQUFJLENBQUEsTUFDakMsTUFBTyxDQUFBTSxJQUFJLENBQUdMLFdBQVcsQ0FDM0IsQ0FBQyxLQUFBTCxjQUFBLEdBQUFTLENBQUEsVUFBQVQsY0FBQSxHQUFBSSxDQUFBLE1BQ0QsTUFBTyxDQUFBRyxLQUFLLEdBQUtBLEtBQUssRUFBQVAsY0FBQSxHQUFBUyxDQUFBLFNBQUdGLEtBQUssR0FBQVAsY0FBQSxHQUFBUyxDQUFBLFNBQUcsQ0FBQyxFQUNwQyxDQUVBLGNBQWUsQ0FBQUgsUUFBUSIsImlnbm9yZUxpc3QiOltdfQ==