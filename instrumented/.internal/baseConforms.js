function cov_13t8rze4lx(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseConforms.js";var hash="3fc84b567847ef6961e0aea2bb042776d4e856e2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseConforms.js",statementMap:{"0":{start:{line:12,column:16},end:{line:12,column:28}},"1":{start:{line:13,column:2},end:{line:13,column:58}},"2":{start:{line:13,column:21},end:{line:13,column:58}}},fnMap:{"0":{name:"baseConforms",decl:{start:{line:11,column:9},end:{line:11,column:21}},loc:{start:{line:11,column:30},end:{line:14,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:9},end:{line:13,column:10}},loc:{start:{line:13,column:21},end:{line:13,column:58}},line:13}},branchMap:{},s:{"0":0,"1":0,"2":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3fc84b567847ef6961e0aea2bb042776d4e856e2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_13t8rze4lx=function(){return actualCoverage;};}return actualCoverage;}cov_13t8rze4lx();import baseConformsTo from'./baseConformsTo.js';import keys from'../keys.js';/**
 * The base implementation of `conforms` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property predicates to conform to.
 * @returns {Function} Returns the new spec function.
 */function baseConforms(source){cov_13t8rze4lx().f[0]++;const props=(cov_13t8rze4lx().s[0]++,keys(source));cov_13t8rze4lx().s[1]++;return object=>{cov_13t8rze4lx().f[1]++;cov_13t8rze4lx().s[2]++;return baseConformsTo(object,source,props);};}export default baseConforms;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTN0OHJ6ZTRseCIsImFjdHVhbENvdmVyYWdlIiwiYmFzZUNvbmZvcm1zVG8iLCJrZXlzIiwiYmFzZUNvbmZvcm1zIiwic291cmNlIiwiZiIsInByb3BzIiwicyIsIm9iamVjdCJdLCJzb3VyY2VzIjpbImJhc2VDb25mb3Jtcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUNvbmZvcm1zVG8gZnJvbSAnLi9iYXNlQ29uZm9ybXNUby5qcydcbmltcG9ydCBrZXlzIGZyb20gJy4uL2tleXMuanMnXG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGNvbmZvcm1zYCB3aGljaCBkb2Vzbid0IGNsb25lIGBzb3VyY2VgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3Qgb2YgcHJvcGVydHkgcHJlZGljYXRlcyB0byBjb25mb3JtIHRvLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZUNvbmZvcm1zKHNvdXJjZSkge1xuICBjb25zdCBwcm9wcyA9IGtleXMoc291cmNlKVxuICByZXR1cm4gKG9iamVjdCkgPT4gYmFzZUNvbmZvcm1zVG8ob2JqZWN0LCBzb3VyY2UsIHByb3BzKVxufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlQ29uZm9ybXNcbiJdLCJtYXBwaW5ncyI6IitwQ0FlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWixNQUFPLENBQUFFLGNBQWMsS0FBTSxxQkFBcUIsQ0FDaEQsTUFBTyxDQUFBQyxJQUFJLEtBQU0sWUFBWSxDQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUMsWUFBWUEsQ0FBQ0MsTUFBTSxDQUFFLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxNQUM1QixLQUFNLENBQUFDLEtBQUssRUFBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQUdMLElBQUksQ0FBQ0UsTUFBTSxDQUFDLEVBQUFMLGNBQUEsR0FBQVEsQ0FBQSxNQUMxQixNQUFRLENBQUFDLE1BQU0sRUFBSyxDQUFBVCxjQUFBLEdBQUFNLENBQUEsTUFBQU4sY0FBQSxHQUFBUSxDQUFBLGFBQUFOLGNBQWMsQ0FBQ08sTUFBTSxDQUFFSixNQUFNLENBQUVFLEtBQUssQ0FBQyxDQUFELENBQUMsQ0FDMUQsQ0FFQSxjQUFlLENBQUFILFlBQVkiLCJpZ25vcmVMaXN0IjpbXX0=