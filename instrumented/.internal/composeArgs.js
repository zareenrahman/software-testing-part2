function cov_1a5nayh5br(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\composeArgs.js";var hash="626902959cc3b13c41542eb88a89b7dd181d18bd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\composeArgs.js",statementMap:{"0":{start:{line:13,column:21},end:{line:13,column:32}},"1":{start:{line:14,column:24},end:{line:14,column:38}},"2":{start:{line:15,column:21},end:{line:15,column:36}},"3":{start:{line:17,column:18},end:{line:17,column:20}},"4":{start:{line:18,column:18},end:{line:18,column:20}},"5":{start:{line:19,column:20},end:{line:19,column:59}},"6":{start:{line:21,column:17},end:{line:21,column:52}},"7":{start:{line:22,column:22},end:{line:22,column:32}},"8":{start:{line:24,column:2},end:{line:26,column:3}},"9":{start:{line:25,column:4},end:{line:25,column:43}},"10":{start:{line:27,column:2},end:{line:31,column:3}},"11":{start:{line:28,column:4},end:{line:30,column:5}},"12":{start:{line:29,column:6},end:{line:29,column:50}},"13":{start:{line:32,column:2},end:{line:34,column:3}},"14":{start:{line:33,column:4},end:{line:33,column:43}},"15":{start:{line:35,column:2},end:{line:35,column:15}}},fnMap:{"0":{name:"composeArgs",decl:{start:{line:12,column:9},end:{line:12,column:20}},loc:{start:{line:12,column:57},end:{line:36,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:28,column:4},end:{line:30,column:5}},type:"if",locations:[{start:{line:28,column:4},end:{line:30,column:5}},{start:{line:28,column:4},end:{line:30,column:5}}],line:28},"1":{loc:{start:{line:28,column:8},end:{line:28,column:45}},type:"binary-expr",locations:[{start:{line:28,column:8},end:{line:28,column:19}},{start:{line:28,column:23},end:{line:28,column:45}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"626902959cc3b13c41542eb88a89b7dd181d18bd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1a5nayh5br=function(){return actualCoverage;};}return actualCoverage;}cov_1a5nayh5br();/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */function composeArgs(args,partials,holders,isCurried){cov_1a5nayh5br().f[0]++;const argsLength=(cov_1a5nayh5br().s[0]++,args.length);const holdersLength=(cov_1a5nayh5br().s[1]++,holders.length);const leftLength=(cov_1a5nayh5br().s[2]++,partials.length);let argsIndex=(cov_1a5nayh5br().s[3]++,-1);let leftIndex=(cov_1a5nayh5br().s[4]++,-1);let rangeLength=(cov_1a5nayh5br().s[5]++,Math.max(argsLength-holdersLength,0));const result=(cov_1a5nayh5br().s[6]++,new Array(leftLength+rangeLength));const isUncurried=(cov_1a5nayh5br().s[7]++,!isCurried);cov_1a5nayh5br().s[8]++;while(++leftIndex<leftLength){cov_1a5nayh5br().s[9]++;result[leftIndex]=partials[leftIndex];}cov_1a5nayh5br().s[10]++;while(++argsIndex<holdersLength){cov_1a5nayh5br().s[11]++;if((cov_1a5nayh5br().b[1][0]++,isUncurried)||(cov_1a5nayh5br().b[1][1]++,argsIndex<argsLength)){cov_1a5nayh5br().b[0][0]++;cov_1a5nayh5br().s[12]++;result[holders[argsIndex]]=args[argsIndex];}else{cov_1a5nayh5br().b[0][1]++;}}cov_1a5nayh5br().s[13]++;while(rangeLength--){cov_1a5nayh5br().s[14]++;result[leftIndex++]=args[argsIndex++];}cov_1a5nayh5br().s[15]++;return result;}export default composeArgs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWE1bmF5aDViciIsImFjdHVhbENvdmVyYWdlIiwiY29tcG9zZUFyZ3MiLCJhcmdzIiwicGFydGlhbHMiLCJob2xkZXJzIiwiaXNDdXJyaWVkIiwiZiIsImFyZ3NMZW5ndGgiLCJzIiwibGVuZ3RoIiwiaG9sZGVyc0xlbmd0aCIsImxlZnRMZW5ndGgiLCJhcmdzSW5kZXgiLCJsZWZ0SW5kZXgiLCJyYW5nZUxlbmd0aCIsIk1hdGgiLCJtYXgiLCJyZXN1bHQiLCJBcnJheSIsImlzVW5jdXJyaWVkIiwiYiJdLCJzb3VyY2VzIjpbImNvbXBvc2VBcmdzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSB0aGF0IGlzIHRoZSBjb21wb3NpdGlvbiBvZiBwYXJ0aWFsbHkgYXBwbGllZCBhcmd1bWVudHMsXG4gKiBwbGFjZWhvbGRlcnMsIGFuZCBwcm92aWRlZCBhcmd1bWVudHMgaW50byBhIHNpbmdsZSBhcnJheSBvZiBhcmd1bWVudHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFyZ3MgVGhlIHByb3ZpZGVkIGFyZ3VtZW50cy5cbiAqIEBwYXJhbSB7QXJyYXl9IHBhcnRpYWxzIFRoZSBhcmd1bWVudHMgdG8gcHJlcGVuZCB0byB0aG9zZSBwcm92aWRlZC5cbiAqIEBwYXJhbSB7QXJyYXl9IGhvbGRlcnMgVGhlIGBwYXJ0aWFsc2AgcGxhY2Vob2xkZXIgaW5kZXhlcy5cbiAqIEBwYXJhbXMge2Jvb2xlYW59IFtpc0N1cnJpZWRdIFNwZWNpZnkgY29tcG9zaW5nIGZvciBhIGN1cnJpZWQgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBhcnJheSBvZiBjb21wb3NlZCBhcmd1bWVudHMuXG4gKi9cbmZ1bmN0aW9uIGNvbXBvc2VBcmdzKGFyZ3MsIHBhcnRpYWxzLCBob2xkZXJzLCBpc0N1cnJpZWQpIHtcbiAgY29uc3QgYXJnc0xlbmd0aCA9IGFyZ3MubGVuZ3RoXG4gIGNvbnN0IGhvbGRlcnNMZW5ndGggPSBob2xkZXJzLmxlbmd0aFxuICBjb25zdCBsZWZ0TGVuZ3RoID0gcGFydGlhbHMubGVuZ3RoXG5cbiAgbGV0IGFyZ3NJbmRleCA9IC0xXG4gIGxldCBsZWZ0SW5kZXggPSAtMVxuICBsZXQgcmFuZ2VMZW5ndGggPSBNYXRoLm1heChhcmdzTGVuZ3RoIC0gaG9sZGVyc0xlbmd0aCwgMClcblxuICBjb25zdCByZXN1bHQgPSBuZXcgQXJyYXkobGVmdExlbmd0aCArIHJhbmdlTGVuZ3RoKVxuICBjb25zdCBpc1VuY3VycmllZCA9ICFpc0N1cnJpZWRcblxuICB3aGlsZSAoKytsZWZ0SW5kZXggPCBsZWZ0TGVuZ3RoKSB7XG4gICAgcmVzdWx0W2xlZnRJbmRleF0gPSBwYXJ0aWFsc1tsZWZ0SW5kZXhdXG4gIH1cbiAgd2hpbGUgKCsrYXJnc0luZGV4IDwgaG9sZGVyc0xlbmd0aCkge1xuICAgIGlmIChpc1VuY3VycmllZCB8fCBhcmdzSW5kZXggPCBhcmdzTGVuZ3RoKSB7XG4gICAgICByZXN1bHRbaG9sZGVyc1thcmdzSW5kZXhdXSA9IGFyZ3NbYXJnc0luZGV4XVxuICAgIH1cbiAgfVxuICB3aGlsZSAocmFuZ2VMZW5ndGgtLSkge1xuICAgIHJlc3VsdFtsZWZ0SW5kZXgrK10gPSBhcmdzW2FyZ3NJbmRleCsrXVxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29tcG9zZUFyZ3NcbiJdLCJtYXBwaW5ncyI6InFzRUFlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBUyxDQUFBRSxXQUFXQSxDQUFDQyxJQUFJLENBQUVDLFFBQVEsQ0FBRUMsT0FBTyxDQUFFQyxTQUFTLENBQUUsQ0FBQU4sY0FBQSxHQUFBTyxDQUFBLE1BQ3ZELEtBQU0sQ0FBQUMsVUFBVSxFQUFBUixjQUFBLEdBQUFTLENBQUEsTUFBR04sSUFBSSxDQUFDTyxNQUFNLEVBQzlCLEtBQU0sQ0FBQUMsYUFBYSxFQUFBWCxjQUFBLEdBQUFTLENBQUEsTUFBR0osT0FBTyxDQUFDSyxNQUFNLEVBQ3BDLEtBQU0sQ0FBQUUsVUFBVSxFQUFBWixjQUFBLEdBQUFTLENBQUEsTUFBR0wsUUFBUSxDQUFDTSxNQUFNLEVBRWxDLEdBQUksQ0FBQUcsU0FBUyxFQUFBYixjQUFBLEdBQUFTLENBQUEsTUFBRyxDQUFDLENBQUMsRUFDbEIsR0FBSSxDQUFBSyxTQUFTLEVBQUFkLGNBQUEsR0FBQVMsQ0FBQSxNQUFHLENBQUMsQ0FBQyxFQUNsQixHQUFJLENBQUFNLFdBQVcsRUFBQWYsY0FBQSxHQUFBUyxDQUFBLE1BQUdPLElBQUksQ0FBQ0MsR0FBRyxDQUFDVCxVQUFVLENBQUdHLGFBQWEsQ0FBRSxDQUFDLENBQUMsRUFFekQsS0FBTSxDQUFBTyxNQUFNLEVBQUFsQixjQUFBLEdBQUFTLENBQUEsTUFBRyxHQUFJLENBQUFVLEtBQUssQ0FBQ1AsVUFBVSxDQUFHRyxXQUFXLENBQUMsRUFDbEQsS0FBTSxDQUFBSyxXQUFXLEVBQUFwQixjQUFBLEdBQUFTLENBQUEsTUFBRyxDQUFDSCxTQUFTLEVBQUFOLGNBQUEsR0FBQVMsQ0FBQSxNQUU5QixNQUFPLEVBQUVLLFNBQVMsQ0FBR0YsVUFBVSxDQUFFLENBQUFaLGNBQUEsR0FBQVMsQ0FBQSxNQUMvQlMsTUFBTSxDQUFDSixTQUFTLENBQUMsQ0FBR1YsUUFBUSxDQUFDVSxTQUFTLENBQUMsQ0FDekMsQ0FBQ2QsY0FBQSxHQUFBUyxDQUFBLE9BQ0QsTUFBTyxFQUFFSSxTQUFTLENBQUdGLGFBQWEsQ0FBRSxDQUFBWCxjQUFBLEdBQUFTLENBQUEsT0FDbEMsR0FBSSxDQUFBVCxjQUFBLEdBQUFxQixDQUFBLFNBQUFELFdBQVcsSUFBQXBCLGNBQUEsR0FBQXFCLENBQUEsU0FBSVIsU0FBUyxDQUFHTCxVQUFVLEVBQUUsQ0FBQVIsY0FBQSxHQUFBcUIsQ0FBQSxTQUFBckIsY0FBQSxHQUFBUyxDQUFBLE9BQ3pDUyxNQUFNLENBQUNiLE9BQU8sQ0FBQ1EsU0FBUyxDQUFDLENBQUMsQ0FBR1YsSUFBSSxDQUFDVSxTQUFTLENBQUMsQ0FDOUMsQ0FBQyxLQUFBYixjQUFBLEdBQUFxQixDQUFBLFVBQ0gsQ0FBQ3JCLGNBQUEsR0FBQVMsQ0FBQSxPQUNELE1BQU9NLFdBQVcsRUFBRSxDQUFFLENBQUFmLGNBQUEsR0FBQVMsQ0FBQSxPQUNwQlMsTUFBTSxDQUFDSixTQUFTLEVBQUUsQ0FBQyxDQUFHWCxJQUFJLENBQUNVLFNBQVMsRUFBRSxDQUFDLENBQ3pDLENBQUNiLGNBQUEsR0FBQVMsQ0FBQSxPQUNELE1BQU8sQ0FBQVMsTUFBTSxDQUNmLENBRUEsY0FBZSxDQUFBaEIsV0FBVyIsImlnbm9yZUxpc3QiOltdfQ==