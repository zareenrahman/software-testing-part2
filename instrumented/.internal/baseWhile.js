function cov_gym93inwn(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseWhile.js";var hash="3088709c8dc82c0f9ed0537503d56ff58318809f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseWhile.js",statementMap:{"0":{start:{line:14,column:21},end:{line:14,column:26}},"1":{start:{line:15,column:14},end:{line:15,column:37}},"2":{start:{line:17,column:2},end:{line:18,column:45}},"3":{start:{line:20,column:2},end:{line:22,column:77}}},fnMap:{"0":{name:"baseWhile",decl:{start:{line:13,column:9},end:{line:13,column:18}},loc:{start:{line:13,column:56},end:{line:23,column:1}},line:13}},branchMap:{"0":{loc:{start:{line:15,column:14},end:{line:15,column:37}},type:"cond-expr",locations:[{start:{line:15,column:26},end:{line:15,column:32}},{start:{line:15,column:35},end:{line:15,column:37}}],line:15},"1":{loc:{start:{line:17,column:9},end:{line:18,column:41}},type:"binary-expr",locations:[{start:{line:17,column:10},end:{line:17,column:48}},{start:{line:18,column:4},end:{line:18,column:41}}],line:17},"2":{loc:{start:{line:17,column:10},end:{line:17,column:48}},type:"cond-expr",locations:[{start:{line:17,column:22},end:{line:17,column:29}},{start:{line:17,column:32},end:{line:17,column:48}}],line:17},"3":{loc:{start:{line:20,column:9},end:{line:22,column:77}},type:"cond-expr",locations:[{start:{line:21,column:6},end:{line:21,column:77}},{start:{line:22,column:6},end:{line:22,column:77}}],line:20},"4":{loc:{start:{line:21,column:20},end:{line:21,column:41}},type:"cond-expr",locations:[{start:{line:21,column:32},end:{line:21,column:33}},{start:{line:21,column:36},end:{line:21,column:41}}],line:21},"5":{loc:{start:{line:21,column:45},end:{line:21,column:75}},type:"cond-expr",locations:[{start:{line:21,column:57},end:{line:21,column:66}},{start:{line:21,column:69},end:{line:21,column:75}}],line:21},"6":{loc:{start:{line:22,column:20},end:{line:22,column:45}},type:"cond-expr",locations:[{start:{line:22,column:32},end:{line:22,column:41}},{start:{line:22,column:44},end:{line:22,column:45}}],line:22},"7":{loc:{start:{line:22,column:49},end:{line:22,column:75}},type:"cond-expr",locations:[{start:{line:22,column:61},end:{line:22,column:67}},{start:{line:22,column:70},end:{line:22,column:75}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3088709c8dc82c0f9ed0537503d56ff58318809f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_gym93inwn=function(){return actualCoverage;};}return actualCoverage;}cov_gym93inwn();import slice from'../slice.js';/**
 * The base implementation of methods like `dropWhile` and `takeWhile`.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {Function} predicate The function invoked per iteration.
 * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the slice of `array`.
 */function baseWhile(array,predicate,isDrop,fromRight){cov_gym93inwn().f[0]++;const{length}=(cov_gym93inwn().s[0]++,array);let index=(cov_gym93inwn().s[1]++,fromRight?(cov_gym93inwn().b[0][0]++,length):(cov_gym93inwn().b[0][1]++,-1));cov_gym93inwn().s[2]++;while((cov_gym93inwn().b[1][0]++,fromRight?(cov_gym93inwn().b[2][0]++,index--):(cov_gym93inwn().b[2][1]++,++index<length))&&(cov_gym93inwn().b[1][1]++,predicate(array[index],index,array))){}cov_gym93inwn().s[3]++;return isDrop?(cov_gym93inwn().b[3][0]++,slice(array,fromRight?(cov_gym93inwn().b[4][0]++,0):(cov_gym93inwn().b[4][1]++,index),fromRight?(cov_gym93inwn().b[5][0]++,index+1):(cov_gym93inwn().b[5][1]++,length))):(cov_gym93inwn().b[3][1]++,slice(array,fromRight?(cov_gym93inwn().b[6][0]++,index+1):(cov_gym93inwn().b[6][1]++,0),fromRight?(cov_gym93inwn().b[7][0]++,length):(cov_gym93inwn().b[7][1]++,index)));}export default baseWhile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZ3ltOTNpbnduIiwiYWN0dWFsQ292ZXJhZ2UiLCJzbGljZSIsImJhc2VXaGlsZSIsImFycmF5IiwicHJlZGljYXRlIiwiaXNEcm9wIiwiZnJvbVJpZ2h0IiwiZiIsImxlbmd0aCIsInMiLCJpbmRleCIsImIiXSwic291cmNlcyI6WyJiYXNlV2hpbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNsaWNlIGZyb20gJy4uL3NsaWNlLmpzJ1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIG1ldGhvZHMgbGlrZSBgZHJvcFdoaWxlYCBhbmQgYHRha2VXaGlsZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBxdWVyeS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHBhcmFtIHtib29sZWFufSBbaXNEcm9wXSBTcGVjaWZ5IGRyb3BwaW5nIGVsZW1lbnRzIGluc3RlYWQgb2YgdGFraW5nIHRoZW0uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgc2xpY2Ugb2YgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYmFzZVdoaWxlKGFycmF5LCBwcmVkaWNhdGUsIGlzRHJvcCwgZnJvbVJpZ2h0KSB7XG4gIGNvbnN0IHsgbGVuZ3RoIH0gPSBhcnJheVxuICBsZXQgaW5kZXggPSBmcm9tUmlnaHQgPyBsZW5ndGggOiAtMVxuXG4gIHdoaWxlICgoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpICYmXG4gICAgcHJlZGljYXRlKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KSkge31cblxuICByZXR1cm4gaXNEcm9wXG4gICAgPyBzbGljZShhcnJheSwgKGZyb21SaWdodCA/IDAgOiBpbmRleCksIChmcm9tUmlnaHQgPyBpbmRleCArIDEgOiBsZW5ndGgpKVxuICAgIDogc2xpY2UoYXJyYXksIChmcm9tUmlnaHQgPyBpbmRleCArIDEgOiAwKSwgKGZyb21SaWdodCA/IGxlbmd0aCA6IGluZGV4KSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZVdoaWxlXG4iXSwibWFwcGluZ3MiOiI0dEZBZVk7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBZlosTUFBTyxDQUFBRSxLQUFLLEtBQU0sYUFBYSxDQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUMsU0FBU0EsQ0FBQ0MsS0FBSyxDQUFFQyxTQUFTLENBQUVDLE1BQU0sQ0FBRUMsU0FBUyxDQUFFLENBQUFQLGFBQUEsR0FBQVEsQ0FBQSxNQUN0RCxLQUFNLENBQUVDLE1BQU8sQ0FBQyxFQUFBVCxhQUFBLEdBQUFVLENBQUEsTUFBR04sS0FBSyxFQUN4QixHQUFJLENBQUFPLEtBQUssRUFBQVgsYUFBQSxHQUFBVSxDQUFBLE1BQUdILFNBQVMsRUFBQVAsYUFBQSxHQUFBWSxDQUFBLFNBQUdILE1BQU0sR0FBQVQsYUFBQSxHQUFBWSxDQUFBLFNBQUcsQ0FBQyxDQUFDLEdBQUFaLGFBQUEsR0FBQVUsQ0FBQSxNQUVuQyxNQUFPLENBQUFWLGFBQUEsR0FBQVksQ0FBQSxTQUFDTCxTQUFTLEVBQUFQLGFBQUEsR0FBQVksQ0FBQSxTQUFHRCxLQUFLLEVBQUUsR0FBQVgsYUFBQSxHQUFBWSxDQUFBLFNBQUcsRUFBRUQsS0FBSyxDQUFHRixNQUFNLEtBQUFULGFBQUEsR0FBQVksQ0FBQSxTQUM1Q1AsU0FBUyxDQUFDRCxLQUFLLENBQUNPLEtBQUssQ0FBQyxDQUFFQSxLQUFLLENBQUVQLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQ0osYUFBQSxHQUFBVSxDQUFBLE1BRTNDLE1BQU8sQ0FBQUosTUFBTSxFQUFBTixhQUFBLEdBQUFZLENBQUEsU0FDVFYsS0FBSyxDQUFDRSxLQUFLLENBQUdHLFNBQVMsRUFBQVAsYUFBQSxHQUFBWSxDQUFBLFNBQUcsQ0FBQyxHQUFBWixhQUFBLEdBQUFZLENBQUEsU0FBR0QsS0FBSyxFQUFJSixTQUFTLEVBQUFQLGFBQUEsR0FBQVksQ0FBQSxTQUFHRCxLQUFLLENBQUcsQ0FBQyxHQUFBWCxhQUFBLEdBQUFZLENBQUEsU0FBR0gsTUFBTSxDQUFDLENBQUMsR0FBQVQsYUFBQSxHQUFBWSxDQUFBLFNBQ3ZFVixLQUFLLENBQUNFLEtBQUssQ0FBR0csU0FBUyxFQUFBUCxhQUFBLEdBQUFZLENBQUEsU0FBR0QsS0FBSyxDQUFHLENBQUMsR0FBQVgsYUFBQSxHQUFBWSxDQUFBLFNBQUcsQ0FBQyxFQUFJTCxTQUFTLEVBQUFQLGFBQUEsR0FBQVksQ0FBQSxTQUFHSCxNQUFNLEdBQUFULGFBQUEsR0FBQVksQ0FBQSxTQUFHRCxLQUFLLENBQUMsQ0FBQyxFQUM3RSxDQUVBLGNBQWUsQ0FBQVIsU0FBUyIsImlnbm9yZUxpc3QiOltdfQ==