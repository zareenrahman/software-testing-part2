function cov_arm5z4s6k(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseProperty.js";var hash="c40fbba075171ab06b89ad61c730dc2d7dc92f83";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseProperty.js",statementMap:{"0":{start:{line:9,column:2},end:{line:9,column:61}},"1":{start:{line:9,column:21},end:{line:9,column:61}}},fnMap:{"0":{name:"baseProperty",decl:{start:{line:8,column:9},end:{line:8,column:21}},loc:{start:{line:8,column:27},end:{line:10,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:9},end:{line:9,column:10}},loc:{start:{line:9,column:21},end:{line:9,column:61}},line:9}},branchMap:{"0":{loc:{start:{line:9,column:21},end:{line:9,column:61}},type:"cond-expr",locations:[{start:{line:9,column:38},end:{line:9,column:47}},{start:{line:9,column:50},end:{line:9,column:61}}],line:9}},s:{"0":0,"1":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c40fbba075171ab06b89ad61c730dc2d7dc92f83"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_arm5z4s6k=function(){return actualCoverage;};}return actualCoverage;}cov_arm5z4s6k();/**
 * The base implementation of `property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */function baseProperty(key){cov_arm5z4s6k().f[0]++;cov_arm5z4s6k().s[0]++;return object=>{cov_arm5z4s6k().f[1]++;cov_arm5z4s6k().s[1]++;return object==null?(cov_arm5z4s6k().b[0][0]++,undefined):(cov_arm5z4s6k().b[0][1]++,object[key]);};}export default baseProperty;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfYXJtNXo0czZrIiwiYWN0dWFsQ292ZXJhZ2UiLCJiYXNlUHJvcGVydHkiLCJrZXkiLCJmIiwicyIsIm9iamVjdCIsImIiLCJ1bmRlZmluZWQiXSwic291cmNlcyI6WyJiYXNlUHJvcGVydHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgcHJvcGVydHlgIHdpdGhvdXQgc3VwcG9ydCBmb3IgZGVlcCBwYXRocy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVByb3BlcnR5KGtleSkge1xuICByZXR1cm4gKG9iamVjdCkgPT4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBvYmplY3Rba2V5XVxufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlUHJvcGVydHlcbiJdLCJtYXBwaW5ncyI6Iit4Q0FlWTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUUsWUFBWUEsQ0FBQ0MsR0FBRyxDQUFFLENBQUFILGFBQUEsR0FBQUksQ0FBQSxNQUFBSixhQUFBLEdBQUFLLENBQUEsTUFDekIsTUFBUSxDQUFBQyxNQUFNLEVBQUssQ0FBQU4sYUFBQSxHQUFBSSxDQUFBLE1BQUFKLGFBQUEsR0FBQUssQ0FBQSxhQUFBQyxNQUFNLEVBQUksSUFBSSxFQUFBTixhQUFBLEdBQUFPLENBQUEsU0FBR0MsU0FBUyxHQUFBUixhQUFBLEdBQUFPLENBQUEsU0FBR0QsTUFBTSxDQUFDSCxHQUFHLENBQUMsRUFBRCxDQUFDLENBQzdELENBRUEsY0FBZSxDQUFBRCxZQUFZIiwiaWdub3JlTGlzdCI6W119