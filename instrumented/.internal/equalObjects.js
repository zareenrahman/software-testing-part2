function cov_1065vopkc7(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\equalObjects.js";var hash="4beb43fb532afd1b4df4607a293f3f08fc648dfd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\equalObjects.js",statementMap:{"0":{start:{line:4,column:29},end:{line:4,column:30}},"1":{start:{line:7,column:23},end:{line:7,column:54}},"2":{start:{line:23,column:20},end:{line:23,column:50}},"3":{start:{line:24,column:19},end:{line:24,column:37}},"4":{start:{line:25,column:20},end:{line:25,column:35}},"5":{start:{line:26,column:19},end:{line:26,column:36}},"6":{start:{line:27,column:20},end:{line:27,column:35}},"7":{start:{line:29,column:2},end:{line:31,column:3}},"8":{start:{line:30,column:4},end:{line:30,column:16}},"9":{start:{line:33,column:14},end:{line:33,column:23}},"10":{start:{line:34,column:2},end:{line:39,column:3}},"11":{start:{line:35,column:4},end:{line:35,column:25}},"12":{start:{line:36,column:4},end:{line:38,column:5}},"13":{start:{line:37,column:6},end:{line:37,column:18}},"14":{start:{line:41,column:18},end:{line:41,column:35}},"15":{start:{line:42,column:2},end:{line:44,column:3}},"16":{start:{line:43,column:4},end:{line:43,column:27}},"17":{start:{line:45,column:15},end:{line:45,column:19}},"18":{start:{line:46,column:2},end:{line:46,column:26}},"19":{start:{line:47,column:2},end:{line:47,column:26}},"20":{start:{line:50,column:17},end:{line:50,column:26}},"21":{start:{line:51,column:2},end:{line:70,column:3}},"22":{start:{line:52,column:4},end:{line:52,column:25}},"23":{start:{line:53,column:21},end:{line:53,column:32}},"24":{start:{line:54,column:21},end:{line:54,column:31}},"25":{start:{line:56,column:4},end:{line:60,column:5}},"26":{start:{line:57,column:6},end:{line:59,column:67}},"27":{start:{line:62,column:4},end:{line:68,column:5}},"28":{start:{line:66,column:6},end:{line:66,column:20}},"29":{start:{line:67,column:6},end:{line:67,column:11}},"30":{start:{line:69,column:4},end:{line:69,column:49}},"31":{start:{line:71,column:2},end:{line:82,column:3}},"32":{start:{line:72,column:20},end:{line:72,column:38}},"33":{start:{line:73,column:20},end:{line:73,column:37}},"34":{start:{line:76,column:4},end:{line:81,column:5}},"35":{start:{line:80,column:6},end:{line:80,column:20}},"36":{start:{line:83,column:2},end:{line:83,column:25}},"37":{start:{line:84,column:2},end:{line:84,column:24}},"38":{start:{line:85,column:2},end:{line:85,column:15}}},fnMap:{"0":{name:"equalObjects",decl:{start:{line:22,column:9},end:{line:22,column:21}},loc:{start:{line:22,column:76},end:{line:86,column:1}},line:22}},branchMap:{"0":{loc:{start:{line:29,column:2},end:{line:31,column:3}},type:"if",locations:[{start:{line:29,column:2},end:{line:31,column:3}},{start:{line:29,column:2},end:{line:31,column:3}}],line:29},"1":{loc:{start:{line:29,column:6},end:{line:29,column:42}},type:"binary-expr",locations:[{start:{line:29,column:6},end:{line:29,column:28}},{start:{line:29,column:32},end:{line:29,column:42}}],line:29},"2":{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:36,column:4},end:{line:38,column:5}}],line:36},"3":{loc:{start:{line:36,column:10},end:{line:36,column:68}},type:"cond-expr",locations:[{start:{line:36,column:22},end:{line:36,column:34}},{start:{line:36,column:37},end:{line:36,column:68}}],line:36},"4":{loc:{start:{line:42,column:2},end:{line:44,column:3}},type:"if",locations:[{start:{line:42,column:2},end:{line:44,column:3}},{start:{line:42,column:2},end:{line:44,column:3}}],line:42},"5":{loc:{start:{line:42,column:6},end:{line:42,column:33}},type:"binary-expr",locations:[{start:{line:42,column:6},end:{line:42,column:13}},{start:{line:42,column:17},end:{line:42,column:33}}],line:42},"6":{loc:{start:{line:56,column:4},end:{line:60,column:5}},type:"if",locations:[{start:{line:56,column:4},end:{line:60,column:5}},{start:{line:56,column:4},end:{line:60,column:5}}],line:56},"7":{loc:{start:{line:57,column:17},end:{line:59,column:67}},type:"cond-expr",locations:[{start:{line:58,column:10},end:{line:58,column:67}},{start:{line:59,column:10},end:{line:59,column:67}}],line:57},"8":{loc:{start:{line:62,column:4},end:{line:68,column:5}},type:"if",locations:[{start:{line:62,column:4},end:{line:68,column:5}},{start:{line:62,column:4},end:{line:68,column:5}}],line:62},"9":{loc:{start:{line:62,column:10},end:{line:64,column:16}},type:"cond-expr",locations:[{start:{line:63,column:9},end:{line:63,column:91}},{start:{line:64,column:8},end:{line:64,column:16}}],line:62},"10":{loc:{start:{line:63,column:9},end:{line:63,column:91}},type:"binary-expr",locations:[{start:{line:63,column:9},end:{line:63,column:30}},{start:{line:63,column:34},end:{line:63,column:91}}],line:63},"11":{loc:{start:{line:69,column:4},end:{line:69,column:49}},type:"binary-expr",locations:[{start:{line:69,column:4},end:{line:69,column:12}},{start:{line:69,column:17},end:{line:69,column:48}}],line:69},"12":{loc:{start:{line:71,column:2},end:{line:82,column:3}},type:"if",locations:[{start:{line:71,column:2},end:{line:82,column:3}},{start:{line:71,column:2},end:{line:82,column:3}}],line:71},"13":{loc:{start:{line:71,column:6},end:{line:71,column:25}},type:"binary-expr",locations:[{start:{line:71,column:6},end:{line:71,column:12}},{start:{line:71,column:16},end:{line:71,column:25}}],line:71},"14":{loc:{start:{line:76,column:4},end:{line:81,column:5}},type:"if",locations:[{start:{line:76,column:4},end:{line:81,column:5}},{start:{line:76,column:4},end:{line:81,column:5}}],line:76},"15":{loc:{start:{line:76,column:8},end:{line:79,column:70}},type:"binary-expr",locations:[{start:{line:76,column:8},end:{line:76,column:26}},{start:{line:77,column:9},end:{line:77,column:32}},{start:{line:77,column:36},end:{line:77,column:58}},{start:{line:78,column:8},end:{line:79,column:70}}],line:76},"16":{loc:{start:{line:78,column:10},end:{line:79,column:69}},type:"binary-expr",locations:[{start:{line:78,column:10},end:{line:78,column:39}},{start:{line:78,column:43},end:{line:78,column:69}},{start:{line:79,column:10},end:{line:79,column:39}},{start:{line:79,column:43},end:{line:79,column:69}}],line:78}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4beb43fb532afd1b4df4607a293f3f08fc648dfd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1065vopkc7=function(){return actualCoverage;};}return actualCoverage;}cov_1065vopkc7();import getAllKeys from'./getAllKeys.js';/** Used to compose bitmasks for value comparisons. */const COMPARE_PARTIAL_FLAG=(cov_1065vopkc7().s[0]++,1);/** Used to check objects for own properties. */const hasOwnProperty=(cov_1065vopkc7().s[1]++,Object.prototype.hasOwnProperty);/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){cov_1065vopkc7().f[0]++;const isPartial=(cov_1065vopkc7().s[2]++,bitmask&COMPARE_PARTIAL_FLAG);const objProps=(cov_1065vopkc7().s[3]++,getAllKeys(object));const objLength=(cov_1065vopkc7().s[4]++,objProps.length);const othProps=(cov_1065vopkc7().s[5]++,getAllKeys(other));const othLength=(cov_1065vopkc7().s[6]++,othProps.length);cov_1065vopkc7().s[7]++;if((cov_1065vopkc7().b[1][0]++,objLength!=othLength)&&(cov_1065vopkc7().b[1][1]++,!isPartial)){cov_1065vopkc7().b[0][0]++;cov_1065vopkc7().s[8]++;return false;}else{cov_1065vopkc7().b[0][1]++;}let key;let index=(cov_1065vopkc7().s[9]++,objLength);cov_1065vopkc7().s[10]++;while(index--){cov_1065vopkc7().s[11]++;key=objProps[index];cov_1065vopkc7().s[12]++;if(!(isPartial?(cov_1065vopkc7().b[3][0]++,key in other):(cov_1065vopkc7().b[3][1]++,hasOwnProperty.call(other,key)))){cov_1065vopkc7().b[2][0]++;cov_1065vopkc7().s[13]++;return false;}else{cov_1065vopkc7().b[2][1]++;}}// Assume cyclic values are equal.
const stacked=(cov_1065vopkc7().s[14]++,stack.get(object));cov_1065vopkc7().s[15]++;if((cov_1065vopkc7().b[5][0]++,stacked)&&(cov_1065vopkc7().b[5][1]++,stack.get(other))){cov_1065vopkc7().b[4][0]++;cov_1065vopkc7().s[16]++;return stacked==other;}else{cov_1065vopkc7().b[4][1]++;}let result=(cov_1065vopkc7().s[17]++,true);cov_1065vopkc7().s[18]++;stack.set(object,other);cov_1065vopkc7().s[19]++;stack.set(other,object);let compared;let skipCtor=(cov_1065vopkc7().s[20]++,isPartial);cov_1065vopkc7().s[21]++;while(++index<objLength){cov_1065vopkc7().s[22]++;key=objProps[index];const objValue=(cov_1065vopkc7().s[23]++,object[key]);const othValue=(cov_1065vopkc7().s[24]++,other[key]);cov_1065vopkc7().s[25]++;if(customizer){cov_1065vopkc7().b[6][0]++;cov_1065vopkc7().s[26]++;compared=isPartial?(cov_1065vopkc7().b[7][0]++,customizer(othValue,objValue,key,other,object,stack)):(cov_1065vopkc7().b[7][1]++,customizer(objValue,othValue,key,object,other,stack));}else{cov_1065vopkc7().b[6][1]++;}// Recursively compare objects (susceptible to call stack limits).
cov_1065vopkc7().s[27]++;if(!(compared===undefined?(cov_1065vopkc7().b[9][0]++,(cov_1065vopkc7().b[10][0]++,objValue===othValue)||(cov_1065vopkc7().b[10][1]++,equalFunc(objValue,othValue,bitmask,customizer,stack))):(cov_1065vopkc7().b[9][1]++,compared))){cov_1065vopkc7().b[8][0]++;cov_1065vopkc7().s[28]++;result=false;cov_1065vopkc7().s[29]++;break;}else{cov_1065vopkc7().b[8][1]++;}cov_1065vopkc7().s[30]++;(cov_1065vopkc7().b[11][0]++,skipCtor)||(cov_1065vopkc7().b[11][1]++,skipCtor=key=='constructor');}cov_1065vopkc7().s[31]++;if((cov_1065vopkc7().b[13][0]++,result)&&(cov_1065vopkc7().b[13][1]++,!skipCtor)){cov_1065vopkc7().b[12][0]++;const objCtor=(cov_1065vopkc7().s[32]++,object.constructor);const othCtor=(cov_1065vopkc7().s[33]++,other.constructor);// Non `Object` object instances with different constructors are not equal.
cov_1065vopkc7().s[34]++;if((cov_1065vopkc7().b[15][0]++,objCtor!=othCtor)&&(cov_1065vopkc7().b[15][1]++,'constructor'in object)&&(cov_1065vopkc7().b[15][2]++,'constructor'in other)&&(cov_1065vopkc7().b[15][3]++,!((cov_1065vopkc7().b[16][0]++,typeof objCtor==='function')&&(cov_1065vopkc7().b[16][1]++,objCtor instanceof objCtor)&&(cov_1065vopkc7().b[16][2]++,typeof othCtor==='function')&&(cov_1065vopkc7().b[16][3]++,othCtor instanceof othCtor)))){cov_1065vopkc7().b[14][0]++;cov_1065vopkc7().s[35]++;result=false;}else{cov_1065vopkc7().b[14][1]++;}}else{cov_1065vopkc7().b[12][1]++;}cov_1065vopkc7().s[36]++;stack['delete'](object);cov_1065vopkc7().s[37]++;stack['delete'](other);cov_1065vopkc7().s[38]++;return result;}export default equalObjects;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,