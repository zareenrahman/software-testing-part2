function cov_edwtis32p(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\charsEndIndex.js";var hash="081983517ac6c083337aae7082fdee98abd08b0b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\charsEndIndex.js",statementMap:{"0":{start:{line:13,column:14},end:{line:13,column:31}},"1":{start:{line:15,column:2},end:{line:15,column:74}},"2":{start:{line:16,column:2},end:{line:16,column:14}}},fnMap:{"0":{name:"charsEndIndex",decl:{start:{line:12,column:9},end:{line:12,column:22}},loc:{start:{line:12,column:47},end:{line:17,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:15,column:9},end:{line:15,column:70}},type:"binary-expr",locations:[{start:{line:15,column:9},end:{line:15,column:16}},{start:{line:15,column:20},end:{line:15,column:70}}],line:15}},s:{"0":0,"1":0,"2":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"081983517ac6c083337aae7082fdee98abd08b0b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_edwtis32p=function(){return actualCoverage;};}return actualCoverage;}cov_edwtis32p();import baseIndexOf from'./baseIndexOf.js';/**
 * Used by `trim` and `trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */function charsEndIndex(strSymbols,chrSymbols){cov_edwtis32p().f[0]++;let index=(cov_edwtis32p().s[0]++,strSymbols.length);cov_edwtis32p().s[1]++;while((cov_edwtis32p().b[0][0]++,index--)&&(cov_edwtis32p().b[0][1]++,baseIndexOf(chrSymbols,strSymbols[index],0)>-1)){}cov_edwtis32p().s[2]++;return index;}export default charsEndIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZWR3dGlzMzJwIiwiYWN0dWFsQ292ZXJhZ2UiLCJiYXNlSW5kZXhPZiIsImNoYXJzRW5kSW5kZXgiLCJzdHJTeW1ib2xzIiwiY2hyU3ltYm9scyIsImYiLCJpbmRleCIsInMiLCJsZW5ndGgiLCJiIl0sInNvdXJjZXMiOlsiY2hhcnNFbmRJbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUluZGV4T2YgZnJvbSAnLi9iYXNlSW5kZXhPZi5qcydcblxuLyoqXG4gKiBVc2VkIGJ5IGB0cmltYCBhbmQgYHRyaW1FbmRgIHRvIGdldCB0aGUgaW5kZXggb2YgdGhlIGxhc3Qgc3RyaW5nIHN5bWJvbFxuICogdGhhdCBpcyBub3QgZm91bmQgaW4gdGhlIGNoYXJhY3RlciBzeW1ib2xzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBzdHJTeW1ib2xzIFRoZSBzdHJpbmcgc3ltYm9scyB0byBpbnNwZWN0LlxuICogQHBhcmFtIHtBcnJheX0gY2hyU3ltYm9scyBUaGUgY2hhcmFjdGVyIHN5bWJvbHMgdG8gZmluZC5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBsYXN0IHVubWF0Y2hlZCBzdHJpbmcgc3ltYm9sLlxuICovXG5mdW5jdGlvbiBjaGFyc0VuZEluZGV4KHN0clN5bWJvbHMsIGNoclN5bWJvbHMpIHtcbiAgbGV0IGluZGV4ID0gc3RyU3ltYm9scy5sZW5ndGhcblxuICB3aGlsZSAoaW5kZXgtLSAmJiBiYXNlSW5kZXhPZihjaHJTeW1ib2xzLCBzdHJTeW1ib2xzW2luZGV4XSwgMCkgPiAtMSkge31cbiAgcmV0dXJuIGluZGV4XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNoYXJzRW5kSW5kZXhcbiJdLCJtYXBwaW5ncyI6IjB0Q0FlWTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FmWixNQUFPLENBQUFFLFdBQVcsS0FBTSxrQkFBa0IsQ0FFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBUyxDQUFBQyxhQUFhQSxDQUFDQyxVQUFVLENBQUVDLFVBQVUsQ0FBRSxDQUFBTCxhQUFBLEdBQUFNLENBQUEsTUFDN0MsR0FBSSxDQUFBQyxLQUFLLEVBQUFQLGFBQUEsR0FBQVEsQ0FBQSxNQUFHSixVQUFVLENBQUNLLE1BQU0sRUFBQVQsYUFBQSxHQUFBUSxDQUFBLE1BRTdCLE1BQU8sQ0FBQVIsYUFBQSxHQUFBVSxDQUFBLFNBQUFILEtBQUssRUFBRSxJQUFBUCxhQUFBLEdBQUFVLENBQUEsU0FBSVIsV0FBVyxDQUFDRyxVQUFVLENBQUVELFVBQVUsQ0FBQ0csS0FBSyxDQUFDLENBQUUsQ0FBQyxDQUFDLENBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDUCxhQUFBLEdBQUFRLENBQUEsTUFDeEUsTUFBTyxDQUFBRCxLQUFLLENBQ2QsQ0FFQSxjQUFlLENBQUFKLGFBQWEiLCJpZ25vcmVMaXN0IjpbXX0=