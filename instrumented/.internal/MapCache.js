function cov_iu9rt3kt5(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\MapCache.js";var hash="0c2b71b8f8be448ae4e3ae24d6a8b376051c1cb3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\MapCache.js",statementMap:{"0":{start:{line:13,column:15},end:{line:13,column:23}},"1":{start:{line:14,column:2},end:{line:16,column:14}},"2":{start:{line:27,column:15},end:{line:27,column:27}},"3":{start:{line:28,column:2},end:{line:30,column:22}},"4":{start:{line:43,column:16},end:{line:43,column:18}},"5":{start:{line:44,column:19},end:{line:44,column:55}},"6":{start:{line:46,column:4},end:{line:46,column:16}},"7":{start:{line:47,column:4},end:{line:50,column:5}},"8":{start:{line:48,column:20},end:{line:48,column:34}},"9":{start:{line:49,column:6},end:{line:49,column:34}},"10":{start:{line:59,column:4},end:{line:59,column:17}},"11":{start:{line:60,column:4},end:{line:64,column:5}},"12":{start:{line:75,column:19},end:{line:75,column:55}},"13":{start:{line:76,column:4},end:{line:76,column:31}},"14":{start:{line:77,column:4},end:{line:77,column:17}},"15":{start:{line:88,column:4},end:{line:88,column:41}},"16":{start:{line:99,column:4},end:{line:99,column:41}},"17":{start:{line:111,column:17},end:{line:111,column:38}},"18":{start:{line:112,column:17},end:{line:112,column:26}},"19":{start:{line:114,column:4},end:{line:114,column:24}},"20":{start:{line:115,column:4},end:{line:115,column:42}},"21":{start:{line:116,column:4},end:{line:116,column:15}}},fnMap:{"0":{name:"getMapData",decl:{start:{line:12,column:9},end:{line:12,column:19}},loc:{start:{line:12,column:39},end:{line:17,column:1}},line:12},"1":{name:"isKeyable",decl:{start:{line:26,column:9},end:{line:26,column:18}},loc:{start:{line:26,column:26},end:{line:31,column:1}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:42,column:2},end:{line:42,column:3}},loc:{start:{line:42,column:23},end:{line:51,column:3}},line:42},"3":{name:"(anonymous_3)",decl:{start:{line:58,column:2},end:{line:58,column:3}},loc:{start:{line:58,column:10},end:{line:65,column:3}},line:58},"4":{name:"(anonymous_4)",decl:{start:{line:74,column:2},end:{line:74,column:3}},loc:{start:{line:74,column:14},end:{line:78,column:3}},line:74},"5":{name:"(anonymous_5)",decl:{start:{line:87,column:2},end:{line:87,column:3}},loc:{start:{line:87,column:11},end:{line:89,column:3}},line:87},"6":{name:"(anonymous_6)",decl:{start:{line:98,column:2},end:{line:98,column:3}},loc:{start:{line:98,column:11},end:{line:100,column:3}},line:98},"7":{name:"(anonymous_7)",decl:{start:{line:110,column:2},end:{line:110,column:3}},loc:{start:{line:110,column:18},end:{line:117,column:3}},line:110}},branchMap:{"0":{loc:{start:{line:14,column:9},end:{line:16,column:14}},type:"cond-expr",locations:[{start:{line:15,column:6},end:{line:15,column:55}},{start:{line:16,column:6},end:{line:16,column:14}}],line:14},"1":{loc:{start:{line:15,column:11},end:{line:15,column:54}},type:"cond-expr",locations:[{start:{line:15,column:37},end:{line:15,column:45}},{start:{line:15,column:48},end:{line:15,column:54}}],line:15},"2":{loc:{start:{line:28,column:9},end:{line:30,column:22}},type:"cond-expr",locations:[{start:{line:29,column:7},end:{line:29,column:28}},{start:{line:30,column:7},end:{line:30,column:21}}],line:28},"3":{loc:{start:{line:28,column:10},end:{line:28,column:91}},type:"binary-expr",locations:[{start:{line:28,column:10},end:{line:28,column:27}},{start:{line:28,column:31},end:{line:28,column:48}},{start:{line:28,column:52},end:{line:28,column:69}},{start:{line:28,column:73},end:{line:28,column:91}}],line:28},"4":{loc:{start:{line:44,column:19},end:{line:44,column:55}},type:"cond-expr",locations:[{start:{line:44,column:37},end:{line:44,column:38}},{start:{line:44,column:41},end:{line:44,column:55}}],line:44},"5":{loc:{start:{line:76,column:17},end:{line:76,column:31}},type:"cond-expr",locations:[{start:{line:76,column:26},end:{line:76,column:27}},{start:{line:76,column:30},end:{line:76,column:31}}],line:76},"6":{loc:{start:{line:115,column:17},end:{line:115,column:42}},type:"cond-expr",locations:[{start:{line:115,column:37},end:{line:115,column:38}},{start:{line:115,column:41},end:{line:115,column:42}}],line:115}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0c2b71b8f8be448ae4e3ae24d6a8b376051c1cb3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_iu9rt3kt5=function(){return actualCoverage;};}return actualCoverage;}cov_iu9rt3kt5();import Hash from'./Hash.js';/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */function getMapData({__data__},key){cov_iu9rt3kt5().f[0]++;const data=(cov_iu9rt3kt5().s[0]++,__data__);cov_iu9rt3kt5().s[1]++;return isKeyable(key)?(cov_iu9rt3kt5().b[0][0]++,data[typeof key==='string'?(cov_iu9rt3kt5().b[1][0]++,'string'):(cov_iu9rt3kt5().b[1][1]++,'hash')]):(cov_iu9rt3kt5().b[0][1]++,data.map);}/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */function isKeyable(value){cov_iu9rt3kt5().f[1]++;const type=(cov_iu9rt3kt5().s[2]++,typeof value);cov_iu9rt3kt5().s[3]++;return(cov_iu9rt3kt5().b[3][0]++,type==='string')||(cov_iu9rt3kt5().b[3][1]++,type==='number')||(cov_iu9rt3kt5().b[3][2]++,type==='symbol')||(cov_iu9rt3kt5().b[3][3]++,type==='boolean')?(cov_iu9rt3kt5().b[2][0]++,value!=='__proto__'):(cov_iu9rt3kt5().b[2][1]++,value===null);}class MapCache{/**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */constructor(entries){cov_iu9rt3kt5().f[2]++;let index=(cov_iu9rt3kt5().s[4]++,-1);const length=(cov_iu9rt3kt5().s[5]++,entries==null?(cov_iu9rt3kt5().b[4][0]++,0):(cov_iu9rt3kt5().b[4][1]++,entries.length));cov_iu9rt3kt5().s[6]++;this.clear();cov_iu9rt3kt5().s[7]++;while(++index<length){const entry=(cov_iu9rt3kt5().s[8]++,entries[index]);cov_iu9rt3kt5().s[9]++;this.set(entry[0],entry[1]);}}/**
   * Removes all key-value entries from the map.
   *
   * @memberOf MapCache
   */clear(){cov_iu9rt3kt5().f[3]++;cov_iu9rt3kt5().s[10]++;this.size=0;cov_iu9rt3kt5().s[11]++;this.__data__={'hash':new Hash(),'map':new Map(),'string':new Hash()};}/**
   * Removes `key` and its value from the map.
   *
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */delete(key){cov_iu9rt3kt5().f[4]++;const result=(cov_iu9rt3kt5().s[12]++,getMapData(this,key)['delete'](key));cov_iu9rt3kt5().s[13]++;this.size-=result?(cov_iu9rt3kt5().b[5][0]++,1):(cov_iu9rt3kt5().b[5][1]++,0);cov_iu9rt3kt5().s[14]++;return result;}/**
   * Gets the map value for `key`.
   *
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */get(key){cov_iu9rt3kt5().f[5]++;cov_iu9rt3kt5().s[15]++;return getMapData(this,key).get(key);}/**
   * Checks if a map value for `key` exists.
   *
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */has(key){cov_iu9rt3kt5().f[6]++;cov_iu9rt3kt5().s[16]++;return getMapData(this,key).has(key);}/**
   * Sets the map `key` to `value`.
   *
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */set(key,value){cov_iu9rt3kt5().f[7]++;const data=(cov_iu9rt3kt5().s[17]++,getMapData(this,key));const size=(cov_iu9rt3kt5().s[18]++,data.size);cov_iu9rt3kt5().s[19]++;data.set(key,value);cov_iu9rt3kt5().s[20]++;this.size+=data.size==size?(cov_iu9rt3kt5().b[6][0]++,0):(cov_iu9rt3kt5().b[6][1]++,1);cov_iu9rt3kt5().s[21]++;return this;}}export default MapCache;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,