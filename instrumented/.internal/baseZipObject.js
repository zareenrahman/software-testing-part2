function cov_5x6zidp6b(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseZipObject.js";var hash="b29e2f7df29eb55bdcbdf232a85dbbbf5fdb8b8a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseZipObject.js",statementMap:{"0":{start:{line:11,column:14},end:{line:11,column:16}},"1":{start:{line:12,column:17},end:{line:12,column:29}},"2":{start:{line:13,column:21},end:{line:13,column:34}},"3":{start:{line:14,column:17},end:{line:14,column:19}},"4":{start:{line:16,column:2},end:{line:19,column:3}},"5":{start:{line:17,column:18},end:{line:17,column:64}},"6":{start:{line:18,column:4},end:{line:18,column:43}},"7":{start:{line:20,column:2},end:{line:20,column:15}}},fnMap:{"0":{name:"baseZipObject",decl:{start:{line:10,column:9},end:{line:10,column:22}},loc:{start:{line:10,column:50},end:{line:21,column:1}},line:10}},branchMap:{"0":{loc:{start:{line:17,column:18},end:{line:17,column:64}},type:"cond-expr",locations:[{start:{line:17,column:39},end:{line:17,column:52}},{start:{line:17,column:55},end:{line:17,column:64}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b29e2f7df29eb55bdcbdf232a85dbbbf5fdb8b8a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_5x6zidp6b=function(){return actualCoverage;};}return actualCoverage;}cov_5x6zidp6b();/**
 * This base implementation of `zipObject` which assigns values using `assignFunc`.
 *
 * @private
 * @param {Array} props The property identifiers.
 * @param {Array} values The property values.
 * @param {Function} assignFunc The function to assign values.
 * @returns {Object} Returns the new object.
 */function baseZipObject(props,values,assignFunc){cov_5x6zidp6b().f[0]++;let index=(cov_5x6zidp6b().s[0]++,-1);const length=(cov_5x6zidp6b().s[1]++,props.length);const valsLength=(cov_5x6zidp6b().s[2]++,values.length);const result=(cov_5x6zidp6b().s[3]++,{});cov_5x6zidp6b().s[4]++;while(++index<length){const value=(cov_5x6zidp6b().s[5]++,index<valsLength?(cov_5x6zidp6b().b[0][0]++,values[index]):(cov_5x6zidp6b().b[0][1]++,undefined));cov_5x6zidp6b().s[6]++;assignFunc(result,props[index],value);}cov_5x6zidp6b().s[7]++;return result;}export default baseZipObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNXg2emlkcDZiIiwiYWN0dWFsQ292ZXJhZ2UiLCJiYXNlWmlwT2JqZWN0IiwicHJvcHMiLCJ2YWx1ZXMiLCJhc3NpZ25GdW5jIiwiZiIsImluZGV4IiwicyIsImxlbmd0aCIsInZhbHNMZW5ndGgiLCJyZXN1bHQiLCJ2YWx1ZSIsImIiLCJ1bmRlZmluZWQiXSwic291cmNlcyI6WyJiYXNlWmlwT2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGB6aXBPYmplY3RgIHdoaWNoIGFzc2lnbnMgdmFsdWVzIHVzaW5nIGBhc3NpZ25GdW5jYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gcHJvcHMgVGhlIHByb3BlcnR5IGlkZW50aWZpZXJzLlxuICogQHBhcmFtIHtBcnJheX0gdmFsdWVzIFRoZSBwcm9wZXJ0eSB2YWx1ZXMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBhc3NpZ25GdW5jIFRoZSBmdW5jdGlvbiB0byBhc3NpZ24gdmFsdWVzLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gYmFzZVppcE9iamVjdChwcm9wcywgdmFsdWVzLCBhc3NpZ25GdW5jKSB7XG4gIGxldCBpbmRleCA9IC0xXG4gIGNvbnN0IGxlbmd0aCA9IHByb3BzLmxlbmd0aFxuICBjb25zdCB2YWxzTGVuZ3RoID0gdmFsdWVzLmxlbmd0aFxuICBjb25zdCByZXN1bHQgPSB7fVxuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY29uc3QgdmFsdWUgPSBpbmRleCA8IHZhbHNMZW5ndGggPyB2YWx1ZXNbaW5kZXhdIDogdW5kZWZpbmVkXG4gICAgYXNzaWduRnVuYyhyZXN1bHQsIHByb3BzW2luZGV4XSwgdmFsdWUpXG4gIH1cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlWmlwT2JqZWN0XG4iXSwibWFwcGluZ3MiOiI4Z0RBZVk7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBUyxDQUFBRSxhQUFhQSxDQUFDQyxLQUFLLENBQUVDLE1BQU0sQ0FBRUMsVUFBVSxDQUFFLENBQUFMLGFBQUEsR0FBQU0sQ0FBQSxNQUNoRCxHQUFJLENBQUFDLEtBQUssRUFBQVAsYUFBQSxHQUFBUSxDQUFBLE1BQUcsQ0FBQyxDQUFDLEVBQ2QsS0FBTSxDQUFBQyxNQUFNLEVBQUFULGFBQUEsR0FBQVEsQ0FBQSxNQUFHTCxLQUFLLENBQUNNLE1BQU0sRUFDM0IsS0FBTSxDQUFBQyxVQUFVLEVBQUFWLGFBQUEsR0FBQVEsQ0FBQSxNQUFHSixNQUFNLENBQUNLLE1BQU0sRUFDaEMsS0FBTSxDQUFBRSxNQUFNLEVBQUFYLGFBQUEsR0FBQVEsQ0FBQSxNQUFHLENBQUMsQ0FBQyxFQUFBUixhQUFBLEdBQUFRLENBQUEsTUFFakIsTUFBTyxFQUFFRCxLQUFLLENBQUdFLE1BQU0sQ0FBRSxDQUN2QixLQUFNLENBQUFHLEtBQUssRUFBQVosYUFBQSxHQUFBUSxDQUFBLE1BQUdELEtBQUssQ0FBR0csVUFBVSxFQUFBVixhQUFBLEdBQUFhLENBQUEsU0FBR1QsTUFBTSxDQUFDRyxLQUFLLENBQUMsR0FBQVAsYUFBQSxHQUFBYSxDQUFBLFNBQUdDLFNBQVMsR0FBQWQsYUFBQSxHQUFBUSxDQUFBLE1BQzVESCxVQUFVLENBQUNNLE1BQU0sQ0FBRVIsS0FBSyxDQUFDSSxLQUFLLENBQUMsQ0FBRUssS0FBSyxDQUFDLENBQ3pDLENBQUNaLGFBQUEsR0FBQVEsQ0FBQSxNQUNELE1BQU8sQ0FBQUcsTUFBTSxDQUNmLENBRUEsY0FBZSxDQUFBVCxhQUFhIiwiaWdub3JlTGlzdCI6W119