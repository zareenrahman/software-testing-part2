function cov_2bealfw5cz(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\cloneDataView.js";var hash="e1972247bd12cf30f0ad1ff429429e5f5e05c208";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\cloneDataView.js",statementMap:{"0":{start:{line:12,column:17},end:{line:12,column:77}},"1":{start:{line:13,column:2},end:{line:13,column:83}}},fnMap:{"0":{name:"cloneDataView",decl:{start:{line:11,column:9},end:{line:11,column:22}},loc:{start:{line:11,column:41},end:{line:14,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:12,column:17},end:{line:12,column:77}},type:"cond-expr",locations:[{start:{line:12,column:26},end:{line:12,column:59}},{start:{line:12,column:62},end:{line:12,column:77}}],line:12}},s:{"0":0,"1":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e1972247bd12cf30f0ad1ff429429e5f5e05c208"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2bealfw5cz=function(){return actualCoverage;};}return actualCoverage;}cov_2bealfw5cz();import cloneArrayBuffer from'./cloneArrayBuffer.js';/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */function cloneDataView(dataView,isDeep){cov_2bealfw5cz().f[0]++;const buffer=(cov_2bealfw5cz().s[0]++,isDeep?(cov_2bealfw5cz().b[0][0]++,cloneArrayBuffer(dataView.buffer)):(cov_2bealfw5cz().b[0][1]++,dataView.buffer));cov_2bealfw5cz().s[1]++;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}export default cloneDataView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmJlYWxmdzVjeiIsImFjdHVhbENvdmVyYWdlIiwiY2xvbmVBcnJheUJ1ZmZlciIsImNsb25lRGF0YVZpZXciLCJkYXRhVmlldyIsImlzRGVlcCIsImYiLCJidWZmZXIiLCJzIiwiYiIsImNvbnN0cnVjdG9yIiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiXSwic291cmNlcyI6WyJjbG9uZURhdGFWaWV3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbG9uZUFycmF5QnVmZmVyIGZyb20gJy4vY2xvbmVBcnJheUJ1ZmZlci5qcydcblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgYGRhdGFWaWV3YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IGRhdGFWaWV3IFRoZSBkYXRhIHZpZXcgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXBdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2xvbmVkIGRhdGEgdmlldy5cbiAqL1xuZnVuY3Rpb24gY2xvbmVEYXRhVmlldyhkYXRhVmlldywgaXNEZWVwKSB7XG4gIGNvbnN0IGJ1ZmZlciA9IGlzRGVlcCA/IGNsb25lQXJyYXlCdWZmZXIoZGF0YVZpZXcuYnVmZmVyKSA6IGRhdGFWaWV3LmJ1ZmZlclxuICByZXR1cm4gbmV3IGRhdGFWaWV3LmNvbnN0cnVjdG9yKGJ1ZmZlciwgZGF0YVZpZXcuYnl0ZU9mZnNldCwgZGF0YVZpZXcuYnl0ZUxlbmd0aClcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xvbmVEYXRhVmlld1xuIl0sIm1hcHBpbmdzIjoiOHBDQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLE1BQU8sQ0FBQUUsZ0JBQWdCLEtBQU0sdUJBQXVCLENBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTLENBQUFDLGFBQWFBLENBQUNDLFFBQVEsQ0FBRUMsTUFBTSxDQUFFLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxNQUN2QyxLQUFNLENBQUFDLE1BQU0sRUFBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQUdILE1BQU0sRUFBQUwsY0FBQSxHQUFBUyxDQUFBLFNBQUdQLGdCQUFnQixDQUFDRSxRQUFRLENBQUNHLE1BQU0sQ0FBQyxHQUFBUCxjQUFBLEdBQUFTLENBQUEsU0FBR0wsUUFBUSxDQUFDRyxNQUFNLEdBQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUMzRSxNQUFPLElBQUksQ0FBQUosUUFBUSxDQUFDTSxXQUFXLENBQUNILE1BQU0sQ0FBRUgsUUFBUSxDQUFDTyxVQUFVLENBQUVQLFFBQVEsQ0FBQ1EsVUFBVSxDQUFDLENBQ25GLENBRUEsY0FBZSxDQUFBVCxhQUFhIiwiaWdub3JlTGlzdCI6W119