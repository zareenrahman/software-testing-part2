function cov_iaz6x1ypk(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\isPrototype.js";var hash="a403fbcdd76349d698bd6caea8ea2e5f55d86da2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\isPrototype.js",statementMap:{"0":{start:{line:2,column:20},end:{line:2,column:36}},"1":{start:{line:12,column:15},end:{line:12,column:41}},"2":{start:{line:13,column:16},end:{line:13,column:77}},"3":{start:{line:15,column:2},end:{line:15,column:24}}},fnMap:{"0":{name:"isPrototype",decl:{start:{line:11,column:9},end:{line:11,column:20}},loc:{start:{line:11,column:28},end:{line:16,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:12,column:15},end:{line:12,column:41}},type:"binary-expr",locations:[{start:{line:12,column:15},end:{line:12,column:20}},{start:{line:12,column:24},end:{line:12,column:41}}],line:12},"1":{loc:{start:{line:13,column:16},end:{line:13,column:77}},type:"binary-expr",locations:[{start:{line:13,column:17},end:{line:13,column:43}},{start:{line:13,column:47},end:{line:13,column:61}},{start:{line:13,column:66},end:{line:13,column:77}}],line:13}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{"0":[0,0],"1":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a403fbcdd76349d698bd6caea8ea2e5f55d86da2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_iaz6x1ypk=function(){return actualCoverage;};}return actualCoverage;}cov_iaz6x1ypk();/** Used for built-in method references. */const objectProto=(cov_iaz6x1ypk().s[0]++,Object.prototype);/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */function isPrototype(value){cov_iaz6x1ypk().f[0]++;const Ctor=(cov_iaz6x1ypk().s[1]++,(cov_iaz6x1ypk().b[0][0]++,value)&&(cov_iaz6x1ypk().b[0][1]++,value.constructor));const proto=(cov_iaz6x1ypk().s[2]++,(cov_iaz6x1ypk().b[1][0]++,typeof Ctor==='function')&&(cov_iaz6x1ypk().b[1][1]++,Ctor.prototype)||(cov_iaz6x1ypk().b[1][2]++,objectProto));cov_iaz6x1ypk().s[3]++;return value===proto;}export default isPrototype;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaWF6NngxeXBrIiwiYWN0dWFsQ292ZXJhZ2UiLCJvYmplY3RQcm90byIsInMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJpc1Byb3RvdHlwZSIsInZhbHVlIiwiZiIsIkN0b3IiLCJiIiwiY29uc3RydWN0b3IiLCJwcm90byJdLCJzb3VyY2VzIjpbImlzUHJvdG90eXBlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbmNvbnN0IG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGxpa2VseSBhIHByb3RvdHlwZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBwcm90b3R5cGUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNQcm90b3R5cGUodmFsdWUpIHtcbiAgY29uc3QgQ3RvciA9IHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yXG4gIGNvbnN0IHByb3RvID0gKHR5cGVvZiBDdG9yID09PSAnZnVuY3Rpb24nICYmIEN0b3IucHJvdG90eXBlKSB8fCBvYmplY3RQcm90b1xuXG4gIHJldHVybiB2YWx1ZSA9PT0gcHJvdG9cbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNQcm90b3R5cGVcbiJdLCJtYXBwaW5ncyI6ImdpREFlWTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FmWiwyQ0FDQSxLQUFNLENBQUFFLFdBQVcsRUFBQUYsYUFBQSxHQUFBRyxDQUFBLE1BQUdDLE1BQU0sQ0FBQ0MsU0FBUyxFQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUMsV0FBV0EsQ0FBQ0MsS0FBSyxDQUFFLENBQUFQLGFBQUEsR0FBQVEsQ0FBQSxNQUMxQixLQUFNLENBQUFDLElBQUksRUFBQVQsYUFBQSxHQUFBRyxDQUFBLE1BQUcsQ0FBQUgsYUFBQSxHQUFBVSxDQUFBLFNBQUFILEtBQUssSUFBQVAsYUFBQSxHQUFBVSxDQUFBLFNBQUlILEtBQUssQ0FBQ0ksV0FBVyxHQUN2QyxLQUFNLENBQUFDLEtBQUssRUFBQVosYUFBQSxHQUFBRyxDQUFBLE1BQUksQ0FBQUgsYUFBQSxHQUFBVSxDQUFBLGVBQU8sQ0FBQUQsSUFBSSxHQUFLLFVBQVUsSUFBQVQsYUFBQSxHQUFBVSxDQUFBLFNBQUlELElBQUksQ0FBQ0osU0FBUyxJQUFBTCxhQUFBLEdBQUFVLENBQUEsU0FBS1IsV0FBVyxHQUFBRixhQUFBLEdBQUFHLENBQUEsTUFFM0UsTUFBTyxDQUFBSSxLQUFLLEdBQUtLLEtBQUssQ0FDeEIsQ0FFQSxjQUFlLENBQUFOLFdBQVciLCJpZ25vcmVMaXN0IjpbXX0=