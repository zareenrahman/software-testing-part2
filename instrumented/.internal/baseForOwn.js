function cov_ey4jlwccp(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseForOwn.js";var hash="667f15c7ba841e9390c1fe8cab75e22099b76e9f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseForOwn.js",statementMap:{"0":{start:{line:13,column:2},end:{line:13,column:50}}},fnMap:{"0":{name:"baseForOwn",decl:{start:{line:12,column:9},end:{line:12,column:19}},loc:{start:{line:12,column:38},end:{line:14,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:13,column:9},end:{line:13,column:50}},type:"binary-expr",locations:[{start:{line:13,column:9},end:{line:13,column:15}},{start:{line:13,column:19},end:{line:13,column:50}}],line:13}},s:{"0":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"667f15c7ba841e9390c1fe8cab75e22099b76e9f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ey4jlwccp=function(){return actualCoverage;};}return actualCoverage;}cov_ey4jlwccp();import baseFor from'./baseFor.js';import keys from'../keys.js';/**
 * The base implementation of `forOwn`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */function baseForOwn(object,iteratee){cov_ey4jlwccp().f[0]++;cov_ey4jlwccp().s[0]++;return(cov_ey4jlwccp().b[0][0]++,object)&&(cov_ey4jlwccp().b[0][1]++,baseFor(object,iteratee,keys));}export default baseForOwn;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZXk0amx3Y2NwIiwiYWN0dWFsQ292ZXJhZ2UiLCJiYXNlRm9yIiwia2V5cyIsImJhc2VGb3JPd24iLCJvYmplY3QiLCJpdGVyYXRlZSIsImYiLCJzIiwiYiJdLCJzb3VyY2VzIjpbImJhc2VGb3JPd24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2VGb3IgZnJvbSAnLi9iYXNlRm9yLmpzJ1xuaW1wb3J0IGtleXMgZnJvbSAnLi4va2V5cy5qcydcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZm9yT3duYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICovXG5mdW5jdGlvbiBiYXNlRm9yT3duKG9iamVjdCwgaXRlcmF0ZWUpIHtcbiAgcmV0dXJuIG9iamVjdCAmJiBiYXNlRm9yKG9iamVjdCwgaXRlcmF0ZWUsIGtleXMpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VGb3JPd25cbiJdLCJtYXBwaW5ncyI6InNsQ0FlWTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FmWixNQUFPLENBQUFFLE9BQU8sS0FBTSxjQUFjLENBQ2xDLE1BQU8sQ0FBQUMsSUFBSSxLQUFNLFlBQVksQ0FFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUMsVUFBVUEsQ0FBQ0MsTUFBTSxDQUFFQyxRQUFRLENBQUUsQ0FBQU4sYUFBQSxHQUFBTyxDQUFBLE1BQUFQLGFBQUEsR0FBQVEsQ0FBQSxNQUNwQyxNQUFPLENBQUFSLGFBQUEsR0FBQVMsQ0FBQSxTQUFBSixNQUFNLElBQUFMLGFBQUEsR0FBQVMsQ0FBQSxTQUFJUCxPQUFPLENBQUNHLE1BQU0sQ0FBRUMsUUFBUSxDQUFFSCxJQUFJLENBQUMsRUFDbEQsQ0FFQSxjQUFlLENBQUFDLFVBQVUiLCJpZ25vcmVMaXN0IjpbXX0=