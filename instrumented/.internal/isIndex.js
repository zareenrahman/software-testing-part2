function cov_j7th2m77z(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\isIndex.js";var hash="78cf92218dfbf5292927ed4131a6e0b0faeb6c9a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\isIndex.js",statementMap:{"0":{start:{line:2,column:25},end:{line:2,column:41}},"1":{start:{line:5,column:17},end:{line:5,column:35}},"2":{start:{line:16,column:15},end:{line:16,column:27}},"3":{start:{line:17,column:2},end:{line:17,column:53}},"4":{start:{line:19,column:2},end:{line:22,column:56}}},fnMap:{"0":{name:"isIndex",decl:{start:{line:15,column:9},end:{line:15,column:16}},loc:{start:{line:15,column:32},end:{line:23,column:1}},line:15}},branchMap:{"0":{loc:{start:{line:17,column:11},end:{line:17,column:53}},type:"cond-expr",locations:[{start:{line:17,column:28},end:{line:17,column:44}},{start:{line:17,column:47},end:{line:17,column:53}}],line:17},"1":{loc:{start:{line:19,column:9},end:{line:22,column:56}},type:"binary-expr",locations:[{start:{line:19,column:9},end:{line:19,column:17}},{start:{line:20,column:5},end:{line:20,column:22}},{start:{line:21,column:7},end:{line:21,column:24}},{start:{line:21,column:28},end:{line:21,column:48}},{start:{line:22,column:9},end:{line:22,column:19}},{start:{line:22,column:23},end:{line:22,column:37}},{start:{line:22,column:41},end:{line:22,column:55}}],line:19}},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{"0":[0,0],"1":[0,0,0,0,0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"78cf92218dfbf5292927ed4131a6e0b0faeb6c9a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_j7th2m77z=function(){return actualCoverage;};}return actualCoverage;}cov_j7th2m77z();/** Used as references for various `Number` constants. */const MAX_SAFE_INTEGER=(cov_j7th2m77z().s[0]++,9007199254740991);/** Used to detect unsigned integer values. */const reIsUint=(cov_j7th2m77z().s[1]++,/^(?:0|[1-9]\d*)$/);/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */function isIndex(value,length){cov_j7th2m77z().f[0]++;const type=(cov_j7th2m77z().s[2]++,typeof value);cov_j7th2m77z().s[3]++;length=length==null?(cov_j7th2m77z().b[0][0]++,MAX_SAFE_INTEGER):(cov_j7th2m77z().b[0][1]++,length);cov_j7th2m77z().s[4]++;return(cov_j7th2m77z().b[1][0]++,!!length)&&((cov_j7th2m77z().b[1][1]++,type==='number')||(cov_j7th2m77z().b[1][2]++,type!=='symbol')&&(cov_j7th2m77z().b[1][3]++,reIsUint.test(value)))&&(cov_j7th2m77z().b[1][4]++,value>-1)&&(cov_j7th2m77z().b[1][5]++,value%1==0)&&(cov_j7th2m77z().b[1][6]++,value<length);}export default isIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfajd0aDJtNzd6IiwiYWN0dWFsQ292ZXJhZ2UiLCJNQVhfU0FGRV9JTlRFR0VSIiwicyIsInJlSXNVaW50IiwiaXNJbmRleCIsInZhbHVlIiwibGVuZ3RoIiwiZiIsInR5cGUiLCJiIiwidGVzdCJdLCJzb3VyY2VzIjpbImlzSW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG5jb25zdCBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MVxuXG4vKiogVXNlZCB0byBkZXRlY3QgdW5zaWduZWQgaW50ZWdlciB2YWx1ZXMuICovXG5jb25zdCByZUlzVWludCA9IC9eKD86MHxbMS05XVxcZCopJC9cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgaW5kZXguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtudW1iZXJ9IFtsZW5ndGg9TUFYX1NBRkVfSU5URUdFUl0gVGhlIHVwcGVyIGJvdW5kcyBvZiBhIHZhbGlkIGluZGV4LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBpbmRleCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0luZGV4KHZhbHVlLCBsZW5ndGgpIHtcbiAgY29uc3QgdHlwZSA9IHR5cGVvZiB2YWx1ZVxuICBsZW5ndGggPSBsZW5ndGggPT0gbnVsbCA/IE1BWF9TQUZFX0lOVEVHRVIgOiBsZW5ndGhcblxuICByZXR1cm4gISFsZW5ndGggJiZcbiAgICAodHlwZSA9PT0gJ251bWJlcicgfHxcbiAgICAgICh0eXBlICE9PSAnc3ltYm9sJyAmJiByZUlzVWludC50ZXN0KHZhbHVlKSkpICYmXG4gICAgICAgICh2YWx1ZSA+IC0xICYmIHZhbHVlICUgMSA9PSAwICYmIHZhbHVlIDwgbGVuZ3RoKVxufVxuXG5leHBvcnQgZGVmYXVsdCBpc0luZGV4XG4iXSwibWFwcGluZ3MiOiJneURBZVk7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBZloseURBQ0EsS0FBTSxDQUFBRSxnQkFBZ0IsRUFBQUYsYUFBQSxHQUFBRyxDQUFBLE1BQUcsZ0JBQWdCLEVBRXpDLDhDQUNBLEtBQU0sQ0FBQUMsUUFBUSxFQUFBSixhQUFBLEdBQUFHLENBQUEsTUFBRyxrQkFBa0IsRUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUUsT0FBT0EsQ0FBQ0MsS0FBSyxDQUFFQyxNQUFNLENBQUUsQ0FBQVAsYUFBQSxHQUFBUSxDQUFBLE1BQzlCLEtBQU0sQ0FBQUMsSUFBSSxFQUFBVCxhQUFBLEdBQUFHLENBQUEsTUFBRyxNQUFPLENBQUFHLEtBQUssRUFBQU4sYUFBQSxHQUFBRyxDQUFBLE1BQ3pCSSxNQUFNLENBQUdBLE1BQU0sRUFBSSxJQUFJLEVBQUFQLGFBQUEsR0FBQVUsQ0FBQSxTQUFHUixnQkFBZ0IsR0FBQUYsYUFBQSxHQUFBVSxDQUFBLFNBQUdILE1BQU0sRUFBQVAsYUFBQSxHQUFBRyxDQUFBLE1BRW5ELE1BQU8sQ0FBQUgsYUFBQSxHQUFBVSxDQUFBLFVBQUMsQ0FBQ0gsTUFBTSxJQUNaLENBQUFQLGFBQUEsR0FBQVUsQ0FBQSxTQUFBRCxJQUFJLEdBQUssUUFBUSxHQUNmLENBQUFULGFBQUEsR0FBQVUsQ0FBQSxTQUFBRCxJQUFJLEdBQUssUUFBUSxJQUFBVCxhQUFBLEdBQUFVLENBQUEsU0FBSU4sUUFBUSxDQUFDTyxJQUFJLENBQUNMLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDekMsQ0FBQU4sYUFBQSxHQUFBVSxDQUFBLFNBQUFKLEtBQUssQ0FBRyxDQUFDLENBQUMsSUFBQU4sYUFBQSxHQUFBVSxDQUFBLFNBQUlKLEtBQUssQ0FBRyxDQUFDLEVBQUksQ0FBQyxJQUFBTixhQUFBLEdBQUFVLENBQUEsU0FBSUosS0FBSyxDQUFHQyxNQUFNLENBQUMsQ0FDeEQsQ0FFQSxjQUFlLENBQUFGLE9BQU8iLCJpZ25vcmVMaXN0IjpbXX0=