function cov_2mca4oxdr9(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\stringToArray.js";var hash="b955cb6e94a5e9bf0083f17689fe3ee70cba0d04";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\stringToArray.js",statementMap:{"0":{start:{line:13,column:2},end:{line:15,column:26}}},fnMap:{"0":{name:"stringToArray",decl:{start:{line:12,column:9},end:{line:12,column:22}},loc:{start:{line:12,column:31},end:{line:16,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:13,column:9},end:{line:15,column:26}},type:"cond-expr",locations:[{start:{line:14,column:6},end:{line:14,column:28}},{start:{line:15,column:6},end:{line:15,column:26}}],line:13}},s:{"0":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b955cb6e94a5e9bf0083f17689fe3ee70cba0d04"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2mca4oxdr9=function(){return actualCoverage;};}return actualCoverage;}cov_2mca4oxdr9();import asciiToArray from'./asciiToArray.js';import hasUnicode from'./hasUnicode.js';import unicodeToArray from'./unicodeToArray.js';/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */function stringToArray(string){cov_2mca4oxdr9().f[0]++;cov_2mca4oxdr9().s[0]++;return hasUnicode(string)?(cov_2mca4oxdr9().b[0][0]++,unicodeToArray(string)):(cov_2mca4oxdr9().b[0][1]++,asciiToArray(string));}export default stringToArray;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm1jYTRveGRyOSIsImFjdHVhbENvdmVyYWdlIiwiYXNjaWlUb0FycmF5IiwiaGFzVW5pY29kZSIsInVuaWNvZGVUb0FycmF5Iiwic3RyaW5nVG9BcnJheSIsInN0cmluZyIsImYiLCJzIiwiYiJdLCJzb3VyY2VzIjpbInN0cmluZ1RvQXJyYXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzY2lpVG9BcnJheSBmcm9tICcuL2FzY2lpVG9BcnJheS5qcydcbmltcG9ydCBoYXNVbmljb2RlIGZyb20gJy4vaGFzVW5pY29kZS5qcydcbmltcG9ydCB1bmljb2RlVG9BcnJheSBmcm9tICcuL3VuaWNvZGVUb0FycmF5LmpzJ1xuXG4vKipcbiAqIENvbnZlcnRzIGBzdHJpbmdgIHRvIGFuIGFycmF5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgY29udmVydGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBzdHJpbmdUb0FycmF5KHN0cmluZykge1xuICByZXR1cm4gaGFzVW5pY29kZShzdHJpbmcpXG4gICAgPyB1bmljb2RlVG9BcnJheShzdHJpbmcpXG4gICAgOiBhc2NpaVRvQXJyYXkoc3RyaW5nKVxufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdUb0FycmF5XG4iXSwibWFwcGluZ3MiOiI2bENBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBZlosTUFBTyxDQUFBRSxZQUFZLEtBQU0sbUJBQW1CLENBQzVDLE1BQU8sQ0FBQUMsVUFBVSxLQUFNLGlCQUFpQixDQUN4QyxNQUFPLENBQUFDLGNBQWMsS0FBTSxxQkFBcUIsQ0FFaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTLENBQUFDLGFBQWFBLENBQUNDLE1BQU0sQ0FBRSxDQUFBTixjQUFBLEdBQUFPLENBQUEsTUFBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQzdCLE1BQU8sQ0FBQUwsVUFBVSxDQUFDRyxNQUFNLENBQUMsRUFBQU4sY0FBQSxHQUFBUyxDQUFBLFNBQ3JCTCxjQUFjLENBQUNFLE1BQU0sQ0FBQyxHQUFBTixjQUFBLEdBQUFTLENBQUEsU0FDdEJQLFlBQVksQ0FBQ0ksTUFBTSxDQUFDLEVBQzFCLENBRUEsY0FBZSxDQUFBRCxhQUFhIiwiaWdub3JlTGlzdCI6W119