function cov_1o3k03tnqi(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseSortedIndex.js";var hash="a63e676bdff8a4169fa0d6b2bb1e8c26f0b39a22";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseSortedIndex.js",statementMap:{"0":{start:{line:5,column:25},end:{line:5,column:35}},"1":{start:{line:6,column:30},end:{line:6,column:52}},"2":{start:{line:21,column:12},end:{line:21,column:13}},"3":{start:{line:22,column:13},end:{line:22,column:47}},"4":{start:{line:24,column:2},end:{line:36,column:3}},"5":{start:{line:25,column:4},end:{line:34,column:5}},"6":{start:{line:26,column:18},end:{line:26,column:36}},"7":{start:{line:27,column:23},end:{line:27,column:33}},"8":{start:{line:28,column:6},end:{line:33,column:7}},"9":{start:{line:30,column:8},end:{line:30,column:21}},"10":{start:{line:32,column:8},end:{line:32,column:18}},"11":{start:{line:35,column:4},end:{line:35,column:15}},"12":{start:{line:37,column:2},end:{line:37,column:70}},"13":{start:{line:37,column:52},end:{line:37,column:57}}},fnMap:{"0":{name:"baseSortedIndex",decl:{start:{line:20,column:9},end:{line:20,column:24}},loc:{start:{line:20,column:51},end:{line:38,column:1}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:37,column:41},end:{line:37,column:42}},loc:{start:{line:37,column:52},end:{line:37,column:57}},line:37}},branchMap:{"0":{loc:{start:{line:22,column:13},end:{line:22,column:47}},type:"cond-expr",locations:[{start:{line:22,column:29},end:{line:22,column:32}},{start:{line:22,column:35},end:{line:22,column:47}}],line:22},"1":{loc:{start:{line:24,column:2},end:{line:36,column:3}},type:"if",locations:[{start:{line:24,column:2},end:{line:36,column:3}},{start:{line:24,column:2},end:{line:36,column:3}}],line:24},"2":{loc:{start:{line:24,column:6},end:{line:24,column:83}},type:"binary-expr",locations:[{start:{line:24,column:6},end:{line:24,column:31}},{start:{line:24,column:35},end:{line:24,column:50}},{start:{line:24,column:54},end:{line:24,column:83}}],line:24},"3":{loc:{start:{line:28,column:6},end:{line:33,column:7}},type:"if",locations:[{start:{line:28,column:6},end:{line:33,column:7}},{start:{line:28,column:6},end:{line:33,column:7}}],line:28},"4":{loc:{start:{line:28,column:10},end:{line:29,column:65}},type:"binary-expr",locations:[{start:{line:28,column:10},end:{line:28,column:27}},{start:{line:28,column:31},end:{line:28,column:50}},{start:{line:29,column:11},end:{line:29,column:64}}],line:28},"5":{loc:{start:{line:29,column:11},end:{line:29,column:64}},type:"cond-expr",locations:[{start:{line:29,column:25},end:{line:29,column:42}},{start:{line:29,column:47},end:{line:29,column:63}}],line:29}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a63e676bdff8a4169fa0d6b2bb1e8c26f0b39a22"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1o3k03tnqi=function(){return actualCoverage;};}return actualCoverage;}cov_1o3k03tnqi();import baseSortedIndexBy from'./baseSortedIndexBy.js';import isSymbol from'../isSymbol.js';/** Used as references for the maximum length and index of an array. */const MAX_ARRAY_LENGTH=(cov_1o3k03tnqi().s[0]++,4294967295);const HALF_MAX_ARRAY_LENGTH=(cov_1o3k03tnqi().s[1]++,MAX_ARRAY_LENGTH>>>1);/**
 * The base implementation of `sortedIndex` and `sortedLastIndex` which
 * performs a binary search of `array` to determine the index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */function baseSortedIndex(array,value,retHighest){cov_1o3k03tnqi().f[0]++;let low=(cov_1o3k03tnqi().s[2]++,0);let high=(cov_1o3k03tnqi().s[3]++,array==null?(cov_1o3k03tnqi().b[0][0]++,low):(cov_1o3k03tnqi().b[0][1]++,array.length));cov_1o3k03tnqi().s[4]++;if((cov_1o3k03tnqi().b[2][0]++,typeof value==='number')&&(cov_1o3k03tnqi().b[2][1]++,value===value)&&(cov_1o3k03tnqi().b[2][2]++,high<=HALF_MAX_ARRAY_LENGTH)){cov_1o3k03tnqi().b[1][0]++;cov_1o3k03tnqi().s[5]++;while(low<high){const mid=(cov_1o3k03tnqi().s[6]++,low+high>>>1);const computed=(cov_1o3k03tnqi().s[7]++,array[mid]);cov_1o3k03tnqi().s[8]++;if((cov_1o3k03tnqi().b[4][0]++,computed!==null)&&(cov_1o3k03tnqi().b[4][1]++,!isSymbol(computed))&&(cov_1o3k03tnqi().b[4][2]++,retHighest?(cov_1o3k03tnqi().b[5][0]++,computed<=value):(cov_1o3k03tnqi().b[5][1]++,computed<value))){cov_1o3k03tnqi().b[3][0]++;cov_1o3k03tnqi().s[9]++;low=mid+1;}else{cov_1o3k03tnqi().b[3][1]++;cov_1o3k03tnqi().s[10]++;high=mid;}}cov_1o3k03tnqi().s[11]++;return high;}else{cov_1o3k03tnqi().b[1][1]++;}cov_1o3k03tnqi().s[12]++;return baseSortedIndexBy(array,value,value=>{cov_1o3k03tnqi().f[1]++;cov_1o3k03tnqi().s[13]++;return value;},retHighest);}export default baseSortedIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW8zazAzdG5xaSIsImFjdHVhbENvdmVyYWdlIiwiYmFzZVNvcnRlZEluZGV4QnkiLCJpc1N5bWJvbCIsIk1BWF9BUlJBWV9MRU5HVEgiLCJzIiwiSEFMRl9NQVhfQVJSQVlfTEVOR1RIIiwiYmFzZVNvcnRlZEluZGV4IiwiYXJyYXkiLCJ2YWx1ZSIsInJldEhpZ2hlc3QiLCJmIiwibG93IiwiaGlnaCIsImIiLCJsZW5ndGgiLCJtaWQiLCJjb21wdXRlZCJdLCJzb3VyY2VzIjpbImJhc2VTb3J0ZWRJbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZVNvcnRlZEluZGV4QnkgZnJvbSAnLi9iYXNlU29ydGVkSW5kZXhCeS5qcydcbmltcG9ydCBpc1N5bWJvbCBmcm9tICcuLi9pc1N5bWJvbC5qcydcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdGhlIG1heGltdW0gbGVuZ3RoIGFuZCBpbmRleCBvZiBhbiBhcnJheS4gKi9cbmNvbnN0IE1BWF9BUlJBWV9MRU5HVEggPSA0Mjk0OTY3Mjk1XG5jb25zdCBIQUxGX01BWF9BUlJBWV9MRU5HVEggPSBNQVhfQVJSQVlfTEVOR1RIID4+PiAxXG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYHNvcnRlZEluZGV4YCBhbmQgYHNvcnRlZExhc3RJbmRleGAgd2hpY2hcbiAqIHBlcmZvcm1zIGEgYmluYXJ5IHNlYXJjaCBvZiBgYXJyYXlgIHRvIGRldGVybWluZSB0aGUgaW5kZXggYXQgd2hpY2ggYHZhbHVlYFxuICogc2hvdWxkIGJlIGluc2VydGVkIGludG8gYGFycmF5YCBpbiBvcmRlciB0byBtYWludGFpbiBpdHMgc29ydCBvcmRlci5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIHNvcnRlZCBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gZXZhbHVhdGUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtyZXRIaWdoZXN0XSBTcGVjaWZ5IHJldHVybmluZyB0aGUgaGlnaGVzdCBxdWFsaWZpZWQgaW5kZXguXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBhdCB3aGljaCBgdmFsdWVgIHNob3VsZCBiZSBpbnNlcnRlZFxuICogIGludG8gYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYmFzZVNvcnRlZEluZGV4KGFycmF5LCB2YWx1ZSwgcmV0SGlnaGVzdCkge1xuICBsZXQgbG93ID0gMFxuICBsZXQgaGlnaCA9IGFycmF5ID09IG51bGwgPyBsb3cgOiBhcnJheS5sZW5ndGhcblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB2YWx1ZSA9PT0gdmFsdWUgJiYgaGlnaCA8PSBIQUxGX01BWF9BUlJBWV9MRU5HVEgpIHtcbiAgICB3aGlsZSAobG93IDwgaGlnaCkge1xuICAgICAgY29uc3QgbWlkID0gKGxvdyArIGhpZ2gpID4+PiAxXG4gICAgICBjb25zdCBjb21wdXRlZCA9IGFycmF5W21pZF1cbiAgICAgIGlmIChjb21wdXRlZCAhPT0gbnVsbCAmJiAhaXNTeW1ib2woY29tcHV0ZWQpICYmXG4gICAgICAgICAgKHJldEhpZ2hlc3QgPyAoY29tcHV0ZWQgPD0gdmFsdWUpIDogKGNvbXB1dGVkIDwgdmFsdWUpKSkge1xuICAgICAgICBsb3cgPSBtaWQgKyAxXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoaWdoID0gbWlkXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoaWdoXG4gIH1cbiAgcmV0dXJuIGJhc2VTb3J0ZWRJbmRleEJ5KGFycmF5LCB2YWx1ZSwgKHZhbHVlKSA9PiB2YWx1ZSwgcmV0SGlnaGVzdClcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZVNvcnRlZEluZGV4XG4iXSwibWFwcGluZ3MiOiI4cEdBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBZlosTUFBTyxDQUFB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