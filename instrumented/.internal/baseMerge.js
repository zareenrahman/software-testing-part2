function cov_1ozt6ngdrh(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseMerge.js";var hash="81259d99b7aecfd8161e672cae36788c17476a40";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseMerge.js",statementMap:{"0":{start:{line:20,column:2},end:{line:22,column:3}},"1":{start:{line:21,column:4},end:{line:21,column:10}},"2":{start:{line:23,column:2},end:{line:38,column:12}},"3":{start:{line:24,column:4},end:{line:37,column:5}},"4":{start:{line:25,column:6},end:{line:25,column:34}},"5":{start:{line:26,column:6},end:{line:26,column:80}},"6":{start:{line:29,column:21},end:{line:31,column:19}},"7":{start:{line:33,column:6},end:{line:35,column:7}},"8":{start:{line:34,column:8},end:{line:34,column:27}},"9":{start:{line:36,column:6},end:{line:36,column:45}}},fnMap:{"0":{name:"baseMerge",decl:{start:{line:19,column:9},end:{line:19,column:18}},loc:{start:{line:19,column:64},end:{line:39,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:18},end:{line:23,column:19}},loc:{start:{line:23,column:37},end:{line:38,column:3}},line:23}},branchMap:{"0":{loc:{start:{line:20,column:2},end:{line:22,column:3}},type:"if",locations:[{start:{line:20,column:2},end:{line:22,column:3}},{start:{line:20,column:2},end:{line:22,column:3}}],line:20},"1":{loc:{start:{line:24,column:4},end:{line:37,column:5}},type:"if",locations:[{start:{line:24,column:4},end:{line:37,column:5}},{start:{line:24,column:4},end:{line:37,column:5}}],line:24},"2":{loc:{start:{line:25,column:6},end:{line:25,column:34}},type:"binary-expr",locations:[{start:{line:25,column:6},end:{line:25,column:11}},{start:{line:25,column:16},end:{line:25,column:33}}],line:25},"3":{loc:{start:{line:29,column:21},end:{line:31,column:19}},type:"cond-expr",locations:[{start:{line:30,column:10},end:{line:30,column:76}},{start:{line:31,column:10},end:{line:31,column:19}}],line:29},"4":{loc:{start:{line:33,column:6},end:{line:35,column:7}},type:"if",locations:[{start:{line:33,column:6},end:{line:35,column:7}},{start:{line:33,column:6},end:{line:35,column:7}}],line:33}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"81259d99b7aecfd8161e672cae36788c17476a40"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ozt6ngdrh=function(){return actualCoverage;};}return actualCoverage;}cov_1ozt6ngdrh();import Stack from'./Stack.js';import assignMergeValue from'./assignMergeValue.js';import baseFor from'./baseFor.js';import baseMergeDeep from'./baseMergeDeep.js';import isObject from'../isObject.js';import keysIn from'../keysIn.js';/**
 * The base implementation of `merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */function baseMerge(object,source,srcIndex,customizer,stack){cov_1ozt6ngdrh().f[0]++;cov_1ozt6ngdrh().s[0]++;if(object===source){cov_1ozt6ngdrh().b[0][0]++;cov_1ozt6ngdrh().s[1]++;return;}else{cov_1ozt6ngdrh().b[0][1]++;}cov_1ozt6ngdrh().s[2]++;baseFor(source,(srcValue,key)=>{cov_1ozt6ngdrh().f[1]++;cov_1ozt6ngdrh().s[3]++;if(isObject(srcValue)){cov_1ozt6ngdrh().b[1][0]++;cov_1ozt6ngdrh().s[4]++;(cov_1ozt6ngdrh().b[2][0]++,stack)||(cov_1ozt6ngdrh().b[2][1]++,stack=new Stack());cov_1ozt6ngdrh().s[5]++;baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else{cov_1ozt6ngdrh().b[1][1]++;let newValue=(cov_1ozt6ngdrh().s[6]++,customizer?(cov_1ozt6ngdrh().b[3][0]++,customizer(object[key],srcValue,`${key}`,object,source,stack)):(cov_1ozt6ngdrh().b[3][1]++,undefined));cov_1ozt6ngdrh().s[7]++;if(newValue===undefined){cov_1ozt6ngdrh().b[4][0]++;cov_1ozt6ngdrh().s[8]++;newValue=srcValue;}else{cov_1ozt6ngdrh().b[4][1]++;}cov_1ozt6ngdrh().s[9]++;assignMergeValue(object,key,newValue);}},keysIn);}export default baseMerge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW96dDZuZ2RyaCIsImFjdHVhbENvdmVyYWdlIiwiU3RhY2siLCJhc3NpZ25NZXJnZVZhbHVlIiwiYmFzZUZvciIsImJhc2VNZXJnZURlZXAiLCJpc09iamVjdCIsImtleXNJbiIsImJhc2VNZXJnZSIsIm9iamVjdCIsInNvdXJjZSIsInNyY0luZGV4IiwiY3VzdG9taXplciIsInN0YWNrIiwiZiIsInMiLCJiIiwic3JjVmFsdWUiLCJrZXkiLCJuZXdWYWx1ZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VzIjpbImJhc2VNZXJnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RhY2sgZnJvbSAnLi9TdGFjay5qcydcbmltcG9ydCBhc3NpZ25NZXJnZVZhbHVlIGZyb20gJy4vYXNzaWduTWVyZ2VWYWx1ZS5qcydcbmltcG9ydCBiYXNlRm9yIGZyb20gJy4vYmFzZUZvci5qcydcbmltcG9ydCBiYXNlTWVyZ2VEZWVwIGZyb20gJy4vYmFzZU1lcmdlRGVlcC5qcydcbmltcG9ydCBpc09iamVjdCBmcm9tICcuLi9pc09iamVjdC5qcydcbmltcG9ydCBrZXlzSW4gZnJvbSAnLi4va2V5c0luLmpzJ1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBtZXJnZWAgd2l0aG91dCBzdXBwb3J0IGZvciBtdWx0aXBsZSBzb3VyY2VzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0LlxuICogQHBhcmFtIHtudW1iZXJ9IHNyY0luZGV4IFRoZSBpbmRleCBvZiBgc291cmNlYC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIG1lcmdlZCB2YWx1ZXMuXG4gKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIHNvdXJjZSB2YWx1ZXMgYW5kIHRoZWlyIG1lcmdlZFxuICogIGNvdW50ZXJwYXJ0cy5cbiAqL1xuZnVuY3Rpb24gYmFzZU1lcmdlKG9iamVjdCwgc291cmNlLCBzcmNJbmRleCwgY3VzdG9taXplciwgc3RhY2spIHtcbiAgaWYgKG9iamVjdCA9PT0gc291cmNlKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgYmFzZUZvcihzb3VyY2UsIChzcmNWYWx1ZSwga2V5KSA9PiB7XG4gICAgaWYgKGlzT2JqZWN0KHNyY1ZhbHVlKSkge1xuICAgICAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKVxuICAgICAgYmFzZU1lcmdlRGVlcChvYmplY3QsIHNvdXJjZSwga2V5LCBzcmNJbmRleCwgYmFzZU1lcmdlLCBjdXN0b21pemVyLCBzdGFjaylcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBsZXQgbmV3VmFsdWUgPSBjdXN0b21pemVyXG4gICAgICAgID8gY3VzdG9taXplcihvYmplY3Rba2V5XSwgc3JjVmFsdWUsIGAke2tleX1gLCBvYmplY3QsIHNvdXJjZSwgc3RhY2spXG4gICAgICAgIDogdW5kZWZpbmVkXG5cbiAgICAgIGlmIChuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG5ld1ZhbHVlID0gc3JjVmFsdWVcbiAgICAgIH1cbiAgICAgIGFzc2lnbk1lcmdlVmFsdWUob2JqZWN0LCBrZXksIG5ld1ZhbHVlKVxuICAgIH1cbiAgfSwga2V5c0luKVxufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlTWVyZ2VcbiJdLCJtYXBwaW5ncyI6IjZqRkFlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWixNQUFPLENBQUFFLEtBQUssS0FBTSxZQUFZLENBQzlCLE1BQU8sQ0FBQUMsZ0JBQWdCLEtBQU0sdUJBQXVCLENBQ3BELE1BQU8sQ0FBQUMsT0FBTyxLQUFNLGNBQWMsQ0FDbEMsTUFBTyxDQUFBQyxhQUFhLEtBQU0sb0JBQW9CLENBQzlDLE1BQU8sQ0FBQUMsUUFBUSxLQUFNLGdCQUFnQixDQUNyQyxNQUFPLENBQUFDLE1BQU0sS0FBTSxjQUFjLENBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTLENBQUFDLFNBQVNBLENBQUNDLE1BQU0sQ0FBRUMsTUFBTSxDQUFFQyxRQUFRLENBQUVDLFVBQVUsQ0FBRUMsS0FBSyxDQUFFLENBQUFiLGNBQUEsR0FBQWMsQ0FBQSxNQUFBZCxjQUFBLEdBQUFlLENBQUEsTUFDOUQsR0FBSU4sTUFBTSxHQUFLQyxNQUFNLENBQUUsQ0FBQVYsY0FBQSxHQUFBZ0IsQ0FBQSxTQUFBaEIsY0FBQSxHQUFBZSxDQUFBLE1BQ3JCLE9BQ0YsQ0FBQyxLQUFBZixjQUFBLEdBQUFnQixDQUFBLFVBQUFoQixjQUFBLEdBQUFlLENBQUEsTUFDRFgsT0FBTyxDQUFDTSxNQUFNLENBQUUsQ0FBQ08sUUFBUSxDQUFFQyxHQUFHLEdBQUssQ0FBQWxCLGNBQUEsR0FBQWMsQ0FBQSxNQUFBZCxjQUFBLEdBQUFlLENBQUEsTUFDakMsR0FBSVQsUUFBUSxDQUFDVyxRQUFRLENBQUMsQ0FBRSxDQUFBakIsY0FBQSxHQUFBZ0IsQ0FBQSxTQUFBaEIsY0FBQSxHQUFBZSxDQUFBLE1BQ3RCLENBQUFmLGNBQUEsR0FBQWdCLENBQUEsU0FBQUgsS0FBSyxJQUFBYixjQUFBLEdBQUFnQixDQUFBLFNBQUtILEtBQUssQ0FBRyxHQUFJLENBQUFYLEtBQUssQ0FBRCxDQUFDLENBQUMsQ0FBQUYsY0FBQSxHQUFBZSxDQUFBLE1BQzVCVixhQUFhLENBQUNJLE1BQU0sQ0FBRUMsTUFBTSxDQUFFUSxHQUFHLENBQUVQLFFBQVEsQ0FBRUgsU0FBUyxDQUFFSSxVQUFVLENBQUVDLEtBQUssQ0FBQyxDQUM1RSxDQUFDLElBQ0ksQ0FBQWIsY0FBQSxHQUFBZ0IsQ0FBQSxTQUNILEdBQUksQ0FBQUcsUUFBUSxFQUFBbkIsY0FBQSxHQUFBZSxDQUFBLE1BQUdILFVBQVUsRUFBQVosY0FBQSxHQUFBZ0IsQ0FBQSxTQUNyQkosVUFBVSxDQUFDSCxNQUFNLENBQUNTLEdBQUcsQ0FBQyxDQUFFRCxRQUFRLENBQUUsR0FBR0MsR0FBRyxFQUFFLENBQUVULE1BQU0sQ0FBRUMsTUFBTSxDQUFFRyxLQUFLLENBQUMsR0FBQWIsY0FBQSxHQUFBZ0IsQ0FBQSxTQUNsRUksU0FBUyxHQUFBcEIsY0FBQSxHQUFBZSxDQUFBLE1BRWIsR0FBSUksUUFBUSxHQUFLQyxTQUFTLENBQUUsQ0FBQXBCLGNBQUEsR0FBQWdCLENBQUEsU0FBQWhCLGNBQUEsR0FBQWUsQ0FBQSxNQUMxQkksUUFBUSxDQUFHRixRQUFRLENBQ3JCLENBQUMsS0FBQWpCLGNBQUEsR0FBQWdCLENBQUEsVUFBQWhCLGNBQUEsR0FBQWUsQ0FBQSxNQUNEWixnQkFBZ0IsQ0FBQ00sTUFBTSxDQUFFUyxHQUFHLENBQUVDLFFBQVEsQ0FBQyxDQUN6QyxDQUNGLENBQUMsQ0FBRVosTUFBTSxDQUFDLENBQ1osQ0FFQSxjQUFlLENBQUFDLFNBQVMiLCJpZ25vcmVMaXN0IjpbXX0=