function cov_237vmmpgbb(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseForOwnRight.js";var hash="fa2976ad7ce85124ddb9f4033a2ad1e9c466b393";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseForOwnRight.js",statementMap:{"0":{start:{line:13,column:2},end:{line:13,column:55}}},fnMap:{"0":{name:"baseForOwnRight",decl:{start:{line:12,column:9},end:{line:12,column:24}},loc:{start:{line:12,column:43},end:{line:14,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:13,column:9},end:{line:13,column:55}},type:"binary-expr",locations:[{start:{line:13,column:9},end:{line:13,column:15}},{start:{line:13,column:19},end:{line:13,column:55}}],line:13}},s:{"0":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fa2976ad7ce85124ddb9f4033a2ad1e9c466b393"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_237vmmpgbb=function(){return actualCoverage;};}return actualCoverage;}cov_237vmmpgbb();import baseForRight from'./baseForRight.js';import keys from'../keys.js';/**
 * The base implementation of `forOwnRight`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */function baseForOwnRight(object,iteratee){cov_237vmmpgbb().f[0]++;cov_237vmmpgbb().s[0]++;return(cov_237vmmpgbb().b[0][0]++,object)&&(cov_237vmmpgbb().b[0][1]++,baseForRight(object,iteratee,keys));}export default baseForOwnRight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjM3dm1tcGdiYiIsImFjdHVhbENvdmVyYWdlIiwiYmFzZUZvclJpZ2h0Iiwia2V5cyIsImJhc2VGb3JPd25SaWdodCIsIm9iamVjdCIsIml0ZXJhdGVlIiwiZiIsInMiLCJiIl0sInNvdXJjZXMiOlsiYmFzZUZvck93blJpZ2h0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlRm9yUmlnaHQgZnJvbSAnLi9iYXNlRm9yUmlnaHQuanMnXG5pbXBvcnQga2V5cyBmcm9tICcuLi9rZXlzLmpzJ1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBmb3JPd25SaWdodGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gYmFzZUZvck93blJpZ2h0KG9iamVjdCwgaXRlcmF0ZWUpIHtcbiAgcmV0dXJuIG9iamVjdCAmJiBiYXNlRm9yUmlnaHQob2JqZWN0LCBpdGVyYXRlZSwga2V5cylcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUZvck93blJpZ2h0XG4iXSwibWFwcGluZ3MiOiJzbUNBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBZlosTUFBTyxDQUFBRSxZQUFZLEtBQU0sbUJBQW1CLENBQzVDLE1BQU8sQ0FBQUMsSUFBSSxLQUFNLFlBQVksQ0FFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUMsZUFBZUEsQ0FBQ0MsTUFBTSxDQUFFQyxRQUFRLENBQUUsQ0FBQU4sY0FBQSxHQUFBTyxDQUFBLE1BQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUN6QyxNQUFPLENBQUFSLGNBQUEsR0FBQVMsQ0FBQSxTQUFBSixNQUFNLElBQUFMLGNBQUEsR0FBQVMsQ0FBQSxTQUFJUCxZQUFZLENBQUNHLE1BQU0sQ0FBRUMsUUFBUSxDQUFFSCxJQUFJLENBQUMsRUFDdkQsQ0FFQSxjQUFlLENBQUFDLGVBQWUiLCJpZ25vcmVMaXN0IjpbXX0=