function cov_23it0kwbq6(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseReduce.js";var hash="3447a6fc189dc58868bc12eb93b941faec427f25";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseReduce.js",statementMap:{"0":{start:{line:15,column:2},end:{line:19,column:4}},"1":{start:{line:16,column:4},end:{line:18,column:55}},"2":{start:{line:20,column:2},end:{line:20,column:20}}},fnMap:{"0":{name:"baseReduce",decl:{start:{line:14,column:9},end:{line:14,column:19}},loc:{start:{line:14,column:76},end:{line:21,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:23},end:{line:15,column:24}},loc:{start:{line:15,column:53},end:{line:19,column:3}},line:15}},branchMap:{"0":{loc:{start:{line:16,column:18},end:{line:18,column:55}},type:"cond-expr",locations:[{start:{line:17,column:9},end:{line:17,column:33}},{start:{line:18,column:8},end:{line:18,column:55}}],line:16}},s:{"0":0,"1":0,"2":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3447a6fc189dc58868bc12eb93b941faec427f25"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_23it0kwbq6=function(){return actualCoverage;};}return actualCoverage;}cov_23it0kwbq6();/**
 * The base implementation of `reduce` and `reduceRight` which iterates
 * over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} accumulator The initial value.
 * @param {boolean} initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the accumulated value.
 */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){cov_23it0kwbq6().f[0]++;cov_23it0kwbq6().s[0]++;eachFunc(collection,(value,index,collection)=>{cov_23it0kwbq6().f[1]++;cov_23it0kwbq6().s[1]++;accumulator=initAccum?(cov_23it0kwbq6().b[0][0]++,initAccum=false,value):(cov_23it0kwbq6().b[0][1]++,iteratee(accumulator,value,index,collection));});cov_23it0kwbq6().s[2]++;return accumulator;}export default baseReduce;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjNpdDBrd2JxNiIsImFjdHVhbENvdmVyYWdlIiwiYmFzZVJlZHVjZSIsImNvbGxlY3Rpb24iLCJpdGVyYXRlZSIsImFjY3VtdWxhdG9yIiwiaW5pdEFjY3VtIiwiZWFjaEZ1bmMiLCJmIiwicyIsInZhbHVlIiwiaW5kZXgiLCJiIl0sInNvdXJjZXMiOlsiYmFzZVJlZHVjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGByZWR1Y2VgIGFuZCBgcmVkdWNlUmlnaHRgIHdoaWNoIGl0ZXJhdGVzXG4gKiBvdmVyIGBjb2xsZWN0aW9uYCB1c2luZyBgZWFjaEZ1bmNgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHBhcmFtIHsqfSBhY2N1bXVsYXRvciBUaGUgaW5pdGlhbCB2YWx1ZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaW5pdEFjY3VtIFNwZWNpZnkgdXNpbmcgdGhlIGZpcnN0IG9yIGxhc3QgZWxlbWVudCBvZlxuICogIGBjb2xsZWN0aW9uYCBhcyB0aGUgaW5pdGlhbCB2YWx1ZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVhY2hGdW5jIFRoZSBmdW5jdGlvbiB0byBpdGVyYXRlIG92ZXIgYGNvbGxlY3Rpb25gLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGFjY3VtdWxhdGVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBiYXNlUmVkdWNlKGNvbGxlY3Rpb24sIGl0ZXJhdGVlLCBhY2N1bXVsYXRvciwgaW5pdEFjY3VtLCBlYWNoRnVuYykge1xuICBlYWNoRnVuYyhjb2xsZWN0aW9uLCAodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSA9PiB7XG4gICAgYWNjdW11bGF0b3IgPSBpbml0QWNjdW1cbiAgICAgID8gKGluaXRBY2N1bSA9IGZhbHNlLCB2YWx1ZSlcbiAgICAgIDogaXRlcmF0ZWUoYWNjdW11bGF0b3IsIHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbilcbiAgfSlcbiAgcmV0dXJuIGFjY3VtdWxhdG9yXG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VSZWR1Y2VcbiJdLCJtYXBwaW5ncyI6InUyQ0FlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUUsVUFBVUEsQ0FBQ0MsVUFBVSxDQUFFQyxRQUFRLENBQUVDLFdBQVcsQ0FBRUMsU0FBUyxDQUFFQyxRQUFRLENBQUUsQ0FBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQUFSLGNBQUEsR0FBQVMsQ0FBQSxNQUMxRUYsUUFBUSxDQUFDSixVQUFVLENBQUUsQ0FBQ08sS0FBSyxDQUFFQyxLQUFLLENBQUVSLFVBQVUsR0FBSyxDQUFBSCxjQUFBLEdBQUFRLENBQUEsTUFBQVIsY0FBQSxHQUFBUyxDQUFBLE1BQ2pESixXQUFXLENBQUdDLFNBQVMsRUFBQU4sY0FBQSxHQUFBWSxDQUFBLFNBQ2xCTixTQUFTLENBQUcsS0FBSyxDQUFFSSxLQUFLLEdBQUFWLGNBQUEsR0FBQVksQ0FBQSxTQUN6QlIsUUFBUSxDQUFDQyxXQUFXLENBQUVLLEtBQUssQ0FBRUMsS0FBSyxDQUFFUixVQUFVLENBQUMsRUFDckQsQ0FBQyxDQUFDLENBQUFILGNBQUEsR0FBQVMsQ0FBQSxNQUNGLE1BQU8sQ0FBQUosV0FBVyxDQUNwQixDQUVBLGNBQWUsQ0FBQUgsVUFBVSIsImlnbm9yZUxpc3QiOltdfQ==