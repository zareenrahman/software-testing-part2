function cov_f0279kknd(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseForRight.js";var hash="51855cdc3139a7edf87e41ecac7be730c9fd470f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\.internal\\baseForRight.js",statementMap:{"0":{start:{line:12,column:19},end:{line:12,column:33}},"1":{start:{line:13,column:16},end:{line:13,column:32}},"2":{start:{line:14,column:19},end:{line:14,column:24}},"3":{start:{line:16,column:2},end:{line:21,column:3}},"4":{start:{line:17,column:16},end:{line:17,column:29}},"5":{start:{line:18,column:4},end:{line:20,column:5}},"6":{start:{line:19,column:6},end:{line:19,column:11}},"7":{start:{line:22,column:2},end:{line:22,column:15}}},fnMap:{"0":{name:"baseForRight",decl:{start:{line:11,column:9},end:{line:11,column:21}},loc:{start:{line:11,column:50},end:{line:23,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:18,column:4},end:{line:20,column:5}},type:"if",locations:[{start:{line:18,column:4},end:{line:20,column:5}},{start:{line:18,column:4},end:{line:20,column:5}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"51855cdc3139a7edf87e41ecac7be730c9fd470f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_f0279kknd=function(){return actualCoverage;};}return actualCoverage;}cov_f0279kknd();/**
 * This function is like `baseFor` except that it iterates over properties
 * in the opposite order.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */function baseForRight(object,iteratee,keysFunc){cov_f0279kknd().f[0]++;const iterable=(cov_f0279kknd().s[0]++,Object(object));const props=(cov_f0279kknd().s[1]++,keysFunc(object));let{length}=(cov_f0279kknd().s[2]++,props);cov_f0279kknd().s[3]++;while(length--){const key=(cov_f0279kknd().s[4]++,props[length]);cov_f0279kknd().s[5]++;if(iteratee(iterable[key],key,iterable)===false){cov_f0279kknd().b[0][0]++;cov_f0279kknd().s[6]++;break;}else{cov_f0279kknd().b[0][1]++;}}cov_f0279kknd().s[7]++;return object;}export default baseForRight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZjAyNzlra25kIiwiYWN0dWFsQ292ZXJhZ2UiLCJiYXNlRm9yUmlnaHQiLCJvYmplY3QiLCJpdGVyYXRlZSIsImtleXNGdW5jIiwiZiIsIml0ZXJhYmxlIiwicyIsIk9iamVjdCIsInByb3BzIiwibGVuZ3RoIiwia2V5IiwiYiJdLCJzb3VyY2VzIjpbImJhc2VGb3JSaWdodC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgbGlrZSBgYmFzZUZvcmAgZXhjZXB0IHRoYXQgaXQgaXRlcmF0ZXMgb3ZlciBwcm9wZXJ0aWVzXG4gKiBpbiB0aGUgb3Bwb3NpdGUgb3JkZXIuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHBhcmFtIHtGdW5jdGlvbn0ga2V5c0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUga2V5cyBvZiBgb2JqZWN0YC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VGb3JSaWdodChvYmplY3QsIGl0ZXJhdGVlLCBrZXlzRnVuYykge1xuICBjb25zdCBpdGVyYWJsZSA9IE9iamVjdChvYmplY3QpXG4gIGNvbnN0IHByb3BzID0ga2V5c0Z1bmMob2JqZWN0KVxuICBsZXQgeyBsZW5ndGggfSA9IHByb3BzXG5cbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgY29uc3Qga2V5ID0gcHJvcHNbbGVuZ3RoXVxuICAgIGlmIChpdGVyYXRlZShpdGVyYWJsZVtrZXldLCBrZXksIGl0ZXJhYmxlKSA9PT0gZmFsc2UpIHtcbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG4gIHJldHVybiBvYmplY3Rcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUZvclJpZ2h0XG4iXSwibWFwcGluZ3MiOiI0L0NBZVk7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTLENBQUFFLFlBQVlBLENBQUNDLE1BQU0sQ0FBRUMsUUFBUSxDQUFFQyxRQUFRLENBQUUsQ0FBQUwsYUFBQSxHQUFBTSxDQUFBLE1BQ2hELEtBQU0sQ0FBQUMsUUFBUSxFQUFBUCxhQUFBLEdBQUFRLENBQUEsTUFBR0MsTUFBTSxDQUFDTixNQUFNLENBQUMsRUFDL0IsS0FBTSxDQUFBTyxLQUFLLEVBQUFWLGFBQUEsR0FBQVEsQ0FBQSxNQUFHSCxRQUFRLENBQUNGLE1BQU0sQ0FBQyxFQUM5QixHQUFJLENBQUVRLE1BQU8sQ0FBQyxFQUFBWCxhQUFBLEdBQUFRLENBQUEsTUFBR0UsS0FBSyxFQUFBVixhQUFBLEdBQUFRLENBQUEsTUFFdEIsTUFBT0csTUFBTSxFQUFFLENBQUUsQ0FDZixLQUFNLENBQUFDLEdBQUcsRUFBQVosYUFBQSxHQUFBUSxDQUFBLE1BQUdFLEtBQUssQ0FBQ0MsTUFBTSxDQUFDLEVBQUFYLGFBQUEsR0FBQVEsQ0FBQSxNQUN6QixHQUFJSixRQUFRLENBQUNHLFFBQVEsQ0FBQ0ssR0FBRyxDQUFDLENBQUVBLEdBQUcsQ0FBRUwsUUFBUSxDQUFDLEdBQUssS0FBSyxDQUFFLENBQUFQLGFBQUEsR0FBQWEsQ0FBQSxTQUFBYixhQUFBLEdBQUFRLENBQUEsTUFDcEQsTUFDRixDQUFDLEtBQUFSLGFBQUEsR0FBQWEsQ0FBQSxVQUNILENBQUNiLGFBQUEsR0FBQVEsQ0FBQSxNQUNELE1BQU8sQ0FBQUwsTUFBTSxDQUNmLENBRUEsY0FBZSxDQUFBRCxZQUFZIiwiaWdub3JlTGlzdCI6W119