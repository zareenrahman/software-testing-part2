function cov_2bmkas80a5(){var path="D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\toString.js";var hash="df99a425fb49ef1323b1f104625abf2de022393f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Msc in DS-Course Materials\\Software Testing\\COMP.SE.200-Part 2\\src\\toString.js",statementMap:{"0":{start:{line:4,column:17},end:{line:4,column:22}},"1":{start:{line:28,column:2},end:{line:30,column:3}},"2":{start:{line:29,column:4},end:{line:29,column:16}},"3":{start:{line:31,column:2},end:{line:34,column:3}},"4":{start:{line:33,column:4},end:{line:33,column:77}},"5":{start:{line:33,column:35},end:{line:33,column:74}},"6":{start:{line:35,column:2},end:{line:37,column:3}},"7":{start:{line:36,column:4},end:{line:36,column:27}},"8":{start:{line:38,column:17},end:{line:38,column:27}},"9":{start:{line:39,column:2},end:{line:39,column:68}}},fnMap:{"0":{name:"toString",decl:{start:{line:25,column:9},end:{line:25,column:17}},loc:{start:{line:25,column:25},end:{line:40,column:1}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:33,column:24},end:{line:33,column:25}},loc:{start:{line:33,column:35},end:{line:33,column:74}},line:33}},branchMap:{"0":{loc:{start:{line:28,column:2},end:{line:30,column:3}},type:"if",locations:[{start:{line:28,column:2},end:{line:30,column:3}},{start:{line:28,column:2},end:{line:30,column:3}}],line:28},"1":{loc:{start:{line:31,column:2},end:{line:34,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:34,column:3}},{start:{line:31,column:2},end:{line:34,column:3}}],line:31},"2":{loc:{start:{line:33,column:35},end:{line:33,column:74}},type:"cond-expr",locations:[{start:{line:33,column:51},end:{line:33,column:56}},{start:{line:33,column:59},end:{line:33,column:74}}],line:33},"3":{loc:{start:{line:35,column:2},end:{line:37,column:3}},type:"if",locations:[{start:{line:35,column:2},end:{line:37,column:3}},{start:{line:35,column:2},end:{line:37,column:3}}],line:35},"4":{loc:{start:{line:39,column:9},end:{line:39,column:68}},type:"cond-expr",locations:[{start:{line:39,column:55},end:{line:39,column:59}},{start:{line:39,column:62},end:{line:39,column:68}}],line:39},"5":{loc:{start:{line:39,column:10},end:{line:39,column:51}},type:"binary-expr",locations:[{start:{line:39,column:10},end:{line:39,column:23}},{start:{line:39,column:27},end:{line:39,column:51}}],line:39}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"df99a425fb49ef1323b1f104625abf2de022393f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2bmkas80a5=function(){return actualCoverage;};}return actualCoverage;}cov_2bmkas80a5();import isSymbol from'./isSymbol.js';/** Used as references for various `Number` constants. */const INFINITY=(cov_2bmkas80a5().s[0]++,1/0);/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * toString(null)
 * // => ''
 *
 * toString(-0)
 * // => '-0'
 *
 * toString([1, 2, 3])
 * // => '1,2,3'
 */function toString(value){cov_2bmkas80a5().f[0]++;cov_2bmkas80a5().s[1]++;// Exit early for strings to avoid a performance hit in some environments.
if(typeof value==='string'){cov_2bmkas80a5().b[0][0]++;cov_2bmkas80a5().s[2]++;return value;}else{cov_2bmkas80a5().b[0][1]++;}cov_2bmkas80a5().s[3]++;if(Array.isArray(value)){cov_2bmkas80a5().b[1][0]++;cov_2bmkas80a5().s[4]++;// Recursively convert values (susceptible to call stack limits).
return`${value.map(other=>{cov_2bmkas80a5().f[1]++;cov_2bmkas80a5().s[5]++;return other==null?(cov_2bmkas80a5().b[2][0]++,other):(cov_2bmkas80a5().b[2][1]++,toString(other));})}`;}else{cov_2bmkas80a5().b[1][1]++;}cov_2bmkas80a5().s[6]++;if(isSymbol(value)){cov_2bmkas80a5().b[3][0]++;cov_2bmkas80a5().s[7]++;return value.toString();}else{cov_2bmkas80a5().b[3][1]++;}const result=(cov_2bmkas80a5().s[8]++,`${value}`);cov_2bmkas80a5().s[9]++;return(cov_2bmkas80a5().b[5][0]++,result=='0')&&(cov_2bmkas80a5().b[5][1]++,1/value==-INFINITY)?(cov_2bmkas80a5().b[4][0]++,'-0'):(cov_2bmkas80a5().b[4][1]++,result);}export default toString;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmJta2FzODBhNSIsImFjdHVhbENvdmVyYWdlIiwiaXNTeW1ib2wiLCJJTkZJTklUWSIsInMiLCJ0b1N0cmluZyIsInZhbHVlIiwiZiIsImIiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJvdGhlciIsInJlc3VsdCJdLCJzb3VyY2VzIjpbInRvU3RyaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc1N5bWJvbCBmcm9tICcuL2lzU3ltYm9sLmpzJ1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbmNvbnN0IElORklOSVRZID0gMSAvIDBcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nLiBBbiBlbXB0eSBzdHJpbmcgaXMgcmV0dXJuZWQgZm9yIGBudWxsYFxuICogYW5kIGB1bmRlZmluZWRgIHZhbHVlcy4gVGhlIHNpZ24gb2YgYC0wYCBpcyBwcmVzZXJ2ZWQuXG4gKlxuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHRvU3RyaW5nKG51bGwpXG4gKiAvLyA9PiAnJ1xuICpcbiAqIHRvU3RyaW5nKC0wKVxuICogLy8gPT4gJy0wJ1xuICpcbiAqIHRvU3RyaW5nKFsxLCAyLCAzXSlcbiAqIC8vID0+ICcxLDIsMydcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcodmFsdWUpIHtcbiAgXG4gIC8vIEV4aXQgZWFybHkgZm9yIHN0cmluZ3MgdG8gYXZvaWQgYSBwZXJmb3JtYW5jZSBoaXQgaW4gc29tZSBlbnZpcm9ubWVudHMuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgLy8gUmVjdXJzaXZlbHkgY29udmVydCB2YWx1ZXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICByZXR1cm4gYCR7dmFsdWUubWFwKChvdGhlcikgPT4gb3RoZXIgPT0gbnVsbCA/IG90aGVyIDogdG9TdHJpbmcob3RoZXIpKX1gXG4gIH1cbiAgaWYgKGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygpXG4gIH1cbiAgY29uc3QgcmVzdWx0ID0gYCR7dmFsdWV9YFxuICByZXR1cm4gKHJlc3VsdCA9PSAnMCcgJiYgKDEgLyB2YWx1ZSkgPT0gLUlORklOSVRZKSA/ICctMCcgOiByZXN1bHRcbn1cblxuZXhwb3J0IGRlZmF1bHQgdG9TdHJpbmdcbiJdLCJtYXBwaW5ncyI6IjJ2RkFlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWixNQUFPLENBQUFFLFFBQVEsS0FBTSxlQUFlLENBRXBDLHlEQUNBLEtBQU0sQ0FBQUMsUUFBUSxFQUFBSCxjQUFBLEdBQUFJLENBQUEsTUFBRyxDQUFDLENBQUcsQ0FBQyxFQUV0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUMsUUFBUUEsQ0FBQ0MsS0FBSyxDQUFFLENBQUFOLGNBQUEsR0FBQU8sQ0FBQSxNQUFBUCxjQUFBLEdBQUFJLENBQUEsTUFFdkI7QUFDQSxHQUFJLE1BQU8sQ0FBQUUsS0FBSyxHQUFLLFFBQVEsQ0FBRSxDQUFBTixjQUFBLEdBQUFRLENBQUEsU0FBQVIsY0FBQSxHQUFBSSxDQUFBLE1BQzdCLE1BQU8sQ0FBQUUsS0FBSyxDQUNkLENBQUMsS0FBQU4sY0FBQSxHQUFBUSxDQUFBLFVBQUFSLGNBQUEsR0FBQUksQ0FBQSxNQUNELEdBQUlLLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSixLQUFLLENBQUMsQ0FBRSxDQUFBTixjQUFBLEdBQUFRLENBQUEsU0FBQVIsY0FBQSxHQUFBSSxDQUFBLE1BQ3hCO0FBQ0EsTUFBTyxHQUFHRSxLQUFLLENBQUNLLEdBQUcsQ0FBRUMsS0FBSyxFQUFLLENBQUFaLGNBQUEsR0FBQU8sQ0FBQSxNQUFBUCxjQUFBLEdBQUFJLENBQUEsYUFBQVEsS0FBSyxFQUFJLElBQUksRUFBQVosY0FBQSxHQUFBUSxDQUFBLFNBQUdJLEtBQUssR0FBQVosY0FBQSxHQUFBUSxDQUFBLFNBQUdILFFBQVEsQ0FBQ08sS0FBSyxDQUFDLEVBQUQsQ0FBQyxDQUFDLEVBQUUsQ0FDM0UsQ0FBQyxLQUFBWixjQUFBLEdBQUFRLENBQUEsVUFBQVIsY0FBQSxHQUFBSSxDQUFBLE1BQ0QsR0FBSUYsUUFBUSxDQUFDSSxLQUFLLENBQUMsQ0FBRSxDQUFBTixjQUFBLEdBQUFRLENBQUEsU0FBQVIsY0FBQSxHQUFBSSxDQUFBLE1BQ25CLE1BQU8sQ0FBQUUsS0FBSyxDQUFDRCxRQUFRLENBQUMsQ0FBQyxDQUN6QixDQUFDLEtBQUFMLGNBQUEsR0FBQVEsQ0FBQSxVQUNELEtBQU0sQ0FBQUssTUFBTSxFQUFBYixjQUFBLEdBQUFJLENBQUEsTUFBRyxHQUFHRSxLQUFLLEVBQUUsRUFBQU4sY0FBQSxHQUFBSSxDQUFBLE1BQ3pCLE1BQVEsQ0FBQUosY0FBQSxHQUFBUSxDQUFBLFNBQUFLLE1BQU0sRUFBSSxHQUFHLElBQUFiLGNBQUEsR0FBQVEsQ0FBQSxTQUFLLENBQUMsQ0FBR0YsS0FBSyxFQUFLLENBQUNILFFBQVEsR0FBQUgsY0FBQSxHQUFBUSxDQUFBLFNBQUksSUFBSSxHQUFBUixjQUFBLEdBQUFRLENBQUEsU0FBR0ssTUFBTSxFQUNwRSxDQUVBLGNBQWUsQ0FBQVIsUUFBUSIsImlnbm9yZUxpc3QiOltdfQ==